<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>yexca&#39;Blog</title>
        <link>https://blog.yexca.net/</link>
        <description>Recent content on yexca&#39;Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>yexca</copyright>
        <lastBuildDate>Tue, 07 Jan 2025 17:26:09 +0900</lastBuildDate><atom:link href="https://blog.yexca.net/feed.xml" rel="self" type="application/rss+xml" /><item>
        <title>Python pyinstaller 打包</title>
        <link>https://blog.yexca.net/archives/213/</link>
        <pubDate>Tue, 07 Jan 2025 17:26:09 +0900</pubDate>
        
        <guid>https://blog.yexca.net/archives/213/</guid>
        <description>&lt;p&gt;Python 打包是根据当前系统环境的，Windows 下是打包出 exe 可执行程序，Linux 下打包出 ELF 格式的二进制文件，不支持跨平台打包&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装
&lt;/h2&gt;&lt;p&gt;通过 pip 安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install pyinstaller
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;打包为单文件&#34;&gt;打包为单文件
&lt;/h2&gt;&lt;p&gt;使用参数 &lt;code&gt;--onefile&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>毛玻璃效果</title>
        <link>https://blog.yexca.net/archives/212/</link>
        <pubDate>Sun, 05 Jan 2025 16:19:36 +0900</pubDate>
        
        <guid>https://blog.yexca.net/archives/212/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;今天想对最近设计的半透明、毛玻璃和圆角进行总结来着，突然想到 2023-12-01 貌似做过一个什么东西，这便顺便也重整一下得了&lt;/p&gt;
&lt;h2 id=&#34;页面背景&#34;&gt;页面背景
&lt;/h2&gt;&lt;p&gt;现代的 &lt;del&gt;(二次元)&lt;/del&gt; 网页要有一个背景&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;background-image&lt;/span&gt;: url(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;../img/77194247_p0.jpg&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;background-size&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;cover&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;background-attachment&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;fixed&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;/* 固定 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;background-repeat&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;no-repeat&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;/* 不重复 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;margin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;半透明与毛玻璃&#34;&gt;半透明与毛玻璃
&lt;/h2&gt;&lt;p&gt;然后在背景上加一个蒙版，实现半透明与毛玻璃效果&lt;/p&gt;</description>
        </item>
        <item>
        <title>Pixiv 下载器</title>
        <link>https://blog.yexca.net/archives/211/</link>
        <pubDate>Fri, 03 Jan 2025 20:05:44 +0900</pubDate>
        
        <guid>https://blog.yexca.net/archives/211/</guid>
        <description>&lt;p&gt;耗时三天写出来了个大概能用的版本，不过没有做错误处理 &lt;del&gt;遇到错误直接重启吧&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;项目地址: 

&lt;a class=&#34;link&#34; href=&#34;https://github.com/yexca/PixivDownloader-MySQL&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://github.com/yexca/PixivDownloader-MySQL
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;这要从

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/94/&#34; 

&gt;
数据库记录已下载画师作品
&lt;/a&gt;
 开始说起了，当时我整了个数据库记录我下载过的作品，时间久了之后，觉得这玩意是在做重复作业啊，说到重复作业那必然是计算机来做啊，正好最近不经意间产生了做程序的想法，也正好对其不满意: 

&lt;a class=&#34;link&#34; href=&#34;https://github.com/yexca/yasumiProject&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://github.com/yexca/yasumiProject
&lt;/a&gt;
 ，同时又是过年比较空闲，这就开写&lt;/p&gt;</description>
        </item>
        <item>
        <title>2024 年度总结</title>
        <link>https://blog.yexca.net/archives/210/</link>
        <pubDate>Tue, 31 Dec 2024 17:40:09 +0900</pubDate>
        
        <guid>https://blog.yexca.net/archives/210/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;此文写给我自己看，说是 2024 总结，但也是记录近年的生活感悟与心路历程。文笔不是很好，想表达的东西还有很多，但是不知道怎么整合在一起，就这样吧&lt;/p&gt;
&lt;h2 id=&#34;从-2020-到-2024-的经历&#34;&gt;从 2020 到 2024 的经历
&lt;/h2&gt;&lt;p&gt;从 2020 年开始，慢慢地总是觉得时间过得好快，哪怕是经历了很多事情，也不会找到 2020 以前的那种可能是认真过每一天或者会觉得时间漫长的感觉。但是当我以客观的角度来分析时，事实上每一年我都经历了许多的事情，也做过不少的事，尤其是今年我经历的也可谓是相当之多&lt;/p&gt;</description>
        </item>
        <item>
        <title>用 Hugo 进行博客国际化支持</title>
        <link>https://blog.yexca.net/archives/209/</link>
        <pubDate>Fri, 27 Dec 2024 23:11:45 +0900</pubDate>
        
        <guid>https://blog.yexca.net/archives/209/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;随着对于信息的浏览增多，往往会有对于其他语言的文章书写需求 (同时现代的作品几乎都是多语言支持)，同时又因为好像自从毕设当时加了个多语言支持，之后做的东西或者设计的东西往往都会想要去进行国际化支持，就

&lt;a class=&#34;link&#34; href=&#34;https://github.com/yexca/yasumiProject&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
最近写的一个相当于练手的东西
&lt;/a&gt;
 也整了多语言支持捏 (不过这并不是我想要的效果，太古老了，想做一个现代点的，另外

&lt;a class=&#34;link&#34; href=&#34;https://github.com/yexca/yasumiProject-frontend&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
在做啦
&lt;/a&gt;
 ，希望可以坚持做完)&lt;/p&gt;</description>
        </item>
        <item>
        <title>链接</title>
        <link>https://blog.yexca.net/links/</link>
        <pubDate>Fri, 27 Dec 2024 18:20:25 +0900</pubDate>
        
        <guid>https://blog.yexca.net/links/</guid>
        <description></description>
        </item>
        <item>
        <title>GoLang 后端入门</title>
        <link>https://blog.yexca.net/archives/208/</link>
        <pubDate>Sun, 22 Dec 2024 22:07:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/208/</guid>
        <description>&lt;p&gt;简单 (非技术框架) 实现的 Go 后端&lt;/p&gt;
&lt;p&gt;~~众所周知，~~后端的开发一般是面向接口的开发，也可以说是 CRUD 工程师，本文章将使用 Go 描述从数据库读出数据，然后返回 JSON 数据&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang 通道</title>
        <link>https://blog.yexca.net/archives/207/</link>
        <pubDate>Sat, 21 Dec 2024 14:52:55 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/207/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: This Page&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Go 程 (goroutine) 可以通过 channel 进行传递数据，引用类型 channel 可用于多个 goroutine 通讯，其内部实现了同步，确保并发安全&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang go 程</title>
        <link>https://blog.yexca.net/archives/206/</link>
        <pubDate>Tue, 17 Dec 2024 21:16:31 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/206/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: This Page&lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;进程 -&amp;gt; 线程 -&amp;gt; 协程&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang 结构体标签</title>
        <link>https://blog.yexca.net/archives/205/</link>
        <pubDate>Wed, 11 Dec 2024 18:31:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/205/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: This Page&lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;通过结构体标签可以描述该类在某包的作用&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang 反射</title>
        <link>https://blog.yexca.net/archives/204/</link>
        <pubDate>Tue, 03 Dec 2024 14:07:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/204/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: This Page&lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;反射指一类应用，它们能够自描述和自控制&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京科学大学大学院情报理工学院 2020 问题五 / 科学大院理工学 2020 問題五</title>
        <link>https://blog.yexca.net/archives/203/</link>
        <pubDate>Sun, 01 Dec 2024 18:15:28 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/203/</guid>
        <description>&lt;p&gt;問題一：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/198&#34; 

&gt;
https://blog.yexca.net/archives/198
&lt;/a&gt;
 &lt;br&gt;
問題二：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/201&#34; 

&gt;
https://blog.yexca.net/archives/201
&lt;/a&gt;
 &lt;br&gt;
問題三：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/200&#34; 

&gt;
https://blog.yexca.net/archives/200
&lt;/a&gt;
 &lt;br&gt;
問題四：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/202&#34; 

&gt;
https://blog.yexca.net/archives/202
&lt;/a&gt;
 &lt;br&gt;
問題五：この文章&lt;/p&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;应该快两周了吧终于把这张试卷看完了，效率不是一般的低啊。整体来看怎么说呢，虽然整体难度是要比中国 408 难度低一点，但考试的风格与侧重点并不相同，具体还是不太好比较。希望下次我的效率可以高点啊&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京科学大学大学院情报理工学院 2020 问题四 / 科学大院理工学 2020 問題四</title>
        <link>https://blog.yexca.net/archives/202/</link>
        <pubDate>Thu, 28 Nov 2024 15:51:16 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/202/</guid>
        <description>&lt;p&gt;問題一：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/198&#34; 

&gt;
https://blog.yexca.net/archives/198
&lt;/a&gt;
 &lt;br&gt;
問題二：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/201&#34; 

&gt;
https://blog.yexca.net/archives/201
&lt;/a&gt;
 &lt;br&gt;
問題三：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/200&#34; 

&gt;
https://blog.yexca.net/archives/200
&lt;/a&gt;
 &lt;br&gt;
問題四：この文章&lt;br&gt;
問題五：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/203&#34; 

&gt;
https://blog.yexca.net/archives/203
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;一整题都是考拉普拉斯变换的，同时最后一题是应用。如果不知道拉普拉斯变换是比较难快速解题，虽然速度快的话可以做出前两大题以及第三题的前三问 &lt;del&gt;(其实也很多了)&lt;/del&gt;，对于最后两问倒是属于不知道相关原理便不会做了 (我在最后一问倒是写了不知道相关情况如何解题，但考场那种情况下真的可以反应过来吗？)&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京科学大学大学院情报理工学院 2020 问题二 / 科学大院理工学 2020 問題二</title>
        <link>https://blog.yexca.net/archives/201/</link>
        <pubDate>Sun, 24 Nov 2024 22:42:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/201/</guid>
        <description>&lt;p&gt;問題一：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/198&#34; 

&gt;
https://blog.yexca.net/archives/198
&lt;/a&gt;
 &lt;br&gt;
問題二：この文章&lt;br&gt;
問題三：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/200&#34; 

&gt;
https://blog.yexca.net/archives/200
&lt;/a&gt;
 &lt;br&gt;
問題四：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/202&#34; 

&gt;
https://blog.yexca.net/archives/202
&lt;/a&gt;
 &lt;br&gt;
問題五：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/203&#34; 

&gt;
https://blog.yexca.net/archives/203
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;这一大题刚看的时候还以为属于形式语言 (与自动机理论) 呢，实际上手做题发现是数理的内容 &lt;del&gt;(俩都没学过，也都一样)&lt;/del&gt;&lt;br&gt;
总体的难度不是特别难 &lt;del&gt;(因为做过东大试卷吧，看这个的题目都不太难)&lt;/del&gt; 但还是需要掌握较多的理论基础才可解出&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京科学大学大学院情报理工学院 2020 问题三 / 科学大院理工学 2020 問題三</title>
        <link>https://blog.yexca.net/archives/200/</link>
        <pubDate>Sat, 23 Nov 2024 20:35:28 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/200/</guid>
        <description>&lt;p&gt;問題一：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/198&#34; 

&gt;
https://blog.yexca.net/archives/198
&lt;/a&gt;
 &lt;br&gt;
問題二：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/201&#34; 

&gt;
https://blog.yexca.net/archives/201
&lt;/a&gt;
 &lt;br&gt;
問題三：この文章&lt;br&gt;
問題四：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/202&#34; 

&gt;
https://blog.yexca.net/archives/202
&lt;/a&gt;
 &lt;br&gt;
問題五：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/203&#34; 

&gt;
https://blog.yexca.net/archives/203
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;这个答题是算法题，初看有种要放弃治疗的感觉，但是在做了一遍后可以感觉到难度不是太大，但是需要较高的对于已有算法的理解力。之所以说难度不是太大可能跟我的心里预期有关吧，因为我觉得会不会要设计一个什么算法来着 (我想表达的意思是我并不觉得这个题目简单)&lt;/p&gt;</description>
        </item>
        <item>
        <title>内网穿透</title>
        <link>https://blog.yexca.net/archives/199/</link>
        <pubDate>Fri, 22 Nov 2024 22:05:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/199/</guid>
        <description>&lt;p&gt;以前写的小文章，系统创建时间 2023.12.01&lt;/p&gt;
&lt;p&gt;现在看着之前写的小文章都不大想发布，但也舍不得删，思来想去还是发布吧，也是自己写的&lt;/p&gt;
&lt;h2 id=&#34;ngrok-oneclick&#34;&gt;ngrok OneClick
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;到

&lt;a class=&#34;link&#34; href=&#34;https://ngrok.com/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
官网
&lt;/a&gt;
 注册账号并验证邮箱后会获得 &lt;em&gt;Authtoken&lt;/em&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京科学大学大学院情报理工学院 2020 问题一 / 科学大院理工学 2020 問題一</title>
        <link>https://blog.yexca.net/archives/198/</link>
        <pubDate>Thu, 21 Nov 2024 15:42:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/198/</guid>
        <description>&lt;p&gt;問題一：この文章&lt;br&gt;
問題二：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/201&#34; 

&gt;
https://blog.yexca.net/archives/201
&lt;/a&gt;
 &lt;br&gt;
問題三：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/200&#34; 

&gt;
https://blog.yexca.net/archives/200
&lt;/a&gt;
 &lt;br&gt;
問題四：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/202&#34; 

&gt;
https://blog.yexca.net/archives/202
&lt;/a&gt;
 &lt;br&gt;
問題五：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/203&#34; 

&gt;
https://blog.yexca.net/archives/203
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;まえがき&#34;&gt;まえがき
&lt;/h2&gt;&lt;p&gt;本文是首次使用非母语写的文章，又因为 &lt;del&gt;比较懒&lt;/del&gt; 没有参考其他文章，存在用词出错的可能性。&lt;/p&gt;</description>
        </item>
        <item>
        <title>形式语言与自动机 - 基本概念</title>
        <link>https://blog.yexca.net/archives/197/</link>
        <pubDate>Tue, 19 Nov 2024 22:18:42 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/197/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;Sometimes it&amp;rsquo;s the people who no one imagines anything of who do the things that no one can imagine&lt;/p&gt;
&lt;p&gt;最近从

&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1QMmZYzET2/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
毕导视频
&lt;/a&gt;
 弹幕中得知关于图灵的记录片 The Imitation Game(模拟游戏)，顺便看了一下，对于片中出现的该句话感触颇深，以此当作形式语言与自动机文章的开篇题引&lt;/p&gt;</description>
        </item>
        <item>
        <title>Vue 学习</title>
        <link>https://blog.yexca.net/archives/196/</link>
        <pubDate>Fri, 15 Nov 2024 20:48:29 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/196/</guid>
        <description>&lt;h2 id=&#34;vue-指令&#34;&gt;Vue 指令
&lt;/h2&gt;&lt;p&gt;Vue 会根据不同的指令，针对标签实现不同的功能，指令为带有 &lt;code&gt;v-&lt;/code&gt; 前缀的特殊标签属性&lt;/p&gt;
&lt;h2 id=&#34;v-html&#34;&gt;v-html
&lt;/h2&gt;&lt;p&gt;用于设置元素的 innerHTML&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;v-html&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v-html&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;js/vue.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;el&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;link&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;a href=&amp;#34;https://yexca.net/&amp;#34;&amp;gt;yexca&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;v-show-与-v-if&#34;&gt;v-show 与 v-if
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;\&lt;/th&gt;
          &lt;th&gt;v-show&lt;/th&gt;
          &lt;th&gt;v-if&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;作用&lt;/td&gt;
          &lt;td&gt;控制元素显示隐藏&lt;/td&gt;
          &lt;td&gt;控制元素显示隐藏 (条件渲染)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;语法&lt;/td&gt;
          &lt;td&gt;v-show=&amp;ldquo;表达式&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;v-if=&amp;ldquo;表达式&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;表达式值&lt;/td&gt;
          &lt;td&gt;ture 显示，false 隐藏&lt;/td&gt;
          &lt;td&gt;ture 显示，false 隐藏&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;隐藏说明&lt;/td&gt;
          &lt;td&gt;通过控制属性 &lt;code&gt;style=&amp;quot;display:none;&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;直接删除或创建元素&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;场景&lt;/td&gt;
          &lt;td&gt;频繁切换&lt;/td&gt;
          &lt;td&gt;不频繁切换&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;v-else-与-v-else-if&#34;&gt;v-else 与 v-else-if
&lt;/h2&gt;&lt;p&gt;用于辅助 v-if 进行渲染，需要紧挨着 v-if 一起使用&lt;/p&gt;</description>
        </item>
        <item>
        <title>HTML 学习三 - 网页布局</title>
        <link>https://blog.yexca.net/archives/195/</link>
        <pubDate>Sun, 10 Nov 2024 21:36:51 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/195/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;HTML 学习一 - 基础: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/146&#34; 

&gt;
https://blog.yexca.net/archives/146
&lt;/a&gt;
 &lt;br&gt;
HTML 学习二 - 列表、表格与表单: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/150&#34; 

&gt;
https://blog.yexca.net/archives/150
&lt;/a&gt;
 &lt;br&gt;
HTML 学习三 - 网页布局: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/195&#34; 

&gt;
https://blog.yexca.net/archives/195
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;标准流也叫文档流，指的是标签在页面中默认的排布规则，例如：块元素独占一行，行内元素可以一行显示多个&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am2 -21-25</title>
        <link>https://blog.yexca.net/archives/194/</link>
        <pubDate>Fri, 08 Nov 2024 18:29:54 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/194/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-08: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/191&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/191
&lt;/a&gt;
 
09-15: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/192&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/192
&lt;/a&gt;
 
16-20: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/193&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/193
&lt;/a&gt;
 
21-25: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/194&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/194
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;这五题的难度还好，本来解完充满自信来着，不小心看了下下午论述题，我瞬间没自信了 :cry:&lt;/p&gt;
&lt;h2 id=&#34;碎碎念&#34;&gt;碎碎念
&lt;/h2&gt;&lt;p&gt;思考人生这种事情也确实是空闲的人会思考的，忙起来后也就没时间去胡思乱想了 &lt;del&gt;但忙过头了说不定也会想呢&lt;/del&gt;&lt;br&gt;
我如今应该是意识到自己之前的两点不足了。首先是总觉得随时都能复习；其次是“学无止境”这个观念的误用。&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am2 -16-20</title>
        <link>https://blog.yexca.net/archives/193/</link>
        <pubDate>Wed, 06 Nov 2024 22:05:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/193/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-08: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/191&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/191
&lt;/a&gt;
 
09-15: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/192&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/192
&lt;/a&gt;
 
16-20: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/193&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/193
&lt;/a&gt;
 
21-25: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/194&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/194
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;渐渐不会起来了呢，不过还是可控的 (doge&lt;/p&gt;
&lt;h2 id=&#34;16&#34;&gt;16
&lt;/h2&gt;&lt;p&gt;e シールの説明はどれか。&lt;/p&gt;
&lt;p&gt;ア　インターネット上のゲーム内に限定されたキャラクターのイメージデータの作成者を証明する仕組みの一つである。&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am2 -09-15</title>
        <link>https://blog.yexca.net/archives/192/</link>
        <pubDate>Mon, 04 Nov 2024 23:29:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/192/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-08: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/191&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/191
&lt;/a&gt;
 
09-15: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/192&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/192
&lt;/a&gt;
 
16-20: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/193&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/193
&lt;/a&gt;
 
21-25: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/194&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/194
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;从中间的题目开始，难度开始上来了，几乎都是没有学过的了，可以收回之前说的我觉得可以过的言论了，不过要是真不学什么东西直接过道还不如不去考呢，就算考不过，但学到的知识可以影响自己 (怎么又有要开始的迹象了)&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am2 -01-08</title>
        <link>https://blog.yexca.net/archives/191/</link>
        <pubDate>Sun, 03 Nov 2024 23:11:52 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/191/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-08: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/191&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/191
&lt;/a&gt;
 
09-15: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/192&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/192
&lt;/a&gt;
 
16-20: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/193&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/193
&lt;/a&gt;
 
21-25: 

&lt;a class=&#34;link&#34; href=&#34;http://127.0.0.1:4000/archives/194&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
http://127.0.0.1:4000/archives/194
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;这专门试卷难度倒是还行，不过还是会有我学过的东西，相必经过一定的学习后我应该可以通过客观题，希望早点做完后看看下午题，这才是我合格的关键&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am1 -16-30</title>
        <link>https://blog.yexca.net/archives/190/</link>
        <pubDate>Mon, 28 Oct 2024 19:04:14 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/190/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-02: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/184&#34; 

&gt;
https://blog.yexca.net/archives/184
&lt;/a&gt;
 &lt;br&gt;
03-05: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/185&#34; 

&gt;
https://blog.yexca.net/archives/185
&lt;/a&gt;
 &lt;br&gt;
06-10: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/186&#34; 

&gt;
https://blog.yexca.net/archives/186
&lt;/a&gt;
 &lt;br&gt;
11-15: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/189&#34; 

&gt;
https://blog.yexca.net/archives/189
&lt;/a&gt;
 &lt;br&gt;
16-30: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/190&#34; 

&gt;
https://blog.yexca.net/archives/190
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;整张试卷做下来大部分是软件设计师的感觉，估计有些共通的科目对软件开发要求较低吧，专门的试卷估计会难一点。大部分题目专有名词看不懂，但是翻译过来后是可以会做的，专有名词的记忆很重要嘛&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am1 -11-15</title>
        <link>https://blog.yexca.net/archives/189/</link>
        <pubDate>Sat, 26 Oct 2024 21:41:16 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/189/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-02: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/184&#34; 

&gt;
https://blog.yexca.net/archives/184
&lt;/a&gt;
 &lt;br&gt;
03-05: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/185&#34; 

&gt;
https://blog.yexca.net/archives/185
&lt;/a&gt;
 &lt;br&gt;
06-10: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/186&#34; 

&gt;
https://blog.yexca.net/archives/186
&lt;/a&gt;
 &lt;br&gt;
11-15: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/189&#34; 

&gt;
https://blog.yexca.net/archives/189
&lt;/a&gt;
 &lt;br&gt;
16-30: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/190&#34; 

&gt;
https://blog.yexca.net/archives/190
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;碎碎念&#34;&gt;碎碎念
&lt;/h2&gt;&lt;p&gt;最近眼睛越来越疼了，看屏幕可能一小时就开始了，而且看东西很模糊，感觉需要休息眼睛了，不然再近视看不见真的会很难受 (要是不疼的话我应该都能更新完这张试卷了)&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京大学大学院理工学 数学 2020 问题三 / 東大院理工学 数学 2020 問題三</title>
        <link>https://blog.yexca.net/archives/188/</link>
        <pubDate>Fri, 25 Oct 2024 19:24:36 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/188/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;日本語のタイトルを書いても、この文章は主に日本語の内容ではありません。&lt;del&gt;時間があれば追加かもしれません&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;题目一：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/183&#34; 

&gt;
https://blog.yexca.net/archives/183
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;题目二：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/187&#34; 

&gt;
https://blog.yexca.net/archives/187
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;题目三：本文&lt;/p&gt;
&lt;p&gt;全部做下来的感觉就是可能因为是多专业共用的数学试题吧，线代不知道，高数和概率论几乎就是引导这让考生完成某一结论的证明或者了解某项东西。其中高数是弧长参数化，线代是 37% 法则。而如果知道这些结论会很好解出题目，事先没学过的话做出来的人是真厉害。至少让我从零开始那是包挂的&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京大学大学院理工学 数学 2020 问题二 / 東大院理工学 数学 2020 問題二</title>
        <link>https://blog.yexca.net/archives/187/</link>
        <pubDate>Thu, 24 Oct 2024 22:46:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/187/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;日本語のタイトルを書いても、この文章は主に日本語の内容ではありません。&lt;del&gt;時間があれば追加かもしれません&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;题目一：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/183&#34; 

&gt;
https://blog.yexca.net/archives/183
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;题目二：本文&lt;/p&gt;
&lt;p&gt;题目三：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/188&#34; 

&gt;
https://blog.yexca.net/archives/188
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;唉，干劲总是会被现实所打败，不过这次我伤心的时间倒是变短了，希望慢慢的可以好起来&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am1 -06-10</title>
        <link>https://blog.yexca.net/archives/186/</link>
        <pubDate>Tue, 22 Oct 2024 15:37:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/186/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-02: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/184&#34; 

&gt;
https://blog.yexca.net/archives/184
&lt;/a&gt;
 &lt;br&gt;
03-05: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/185&#34; 

&gt;
https://blog.yexca.net/archives/185
&lt;/a&gt;
 &lt;br&gt;
06-10: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/186&#34; 

&gt;
https://blog.yexca.net/archives/186
&lt;/a&gt;
 &lt;br&gt;
11-15: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/189&#34; 

&gt;
https://blog.yexca.net/archives/189
&lt;/a&gt;
 &lt;br&gt;
16-30: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/190&#34; 

&gt;
https://blog.yexca.net/archives/190
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;可能因为是多场考试共用的试卷吧，问题还是挺基础的，感觉像软考中级软件设计师的程度。不过一共有四场考试呢，也不知道啥时候能把这第一个写完呢&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am1 -03-05</title>
        <link>https://blog.yexca.net/archives/185/</link>
        <pubDate>Mon, 21 Oct 2024 20:35:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/185/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-02: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/184&#34; 

&gt;
https://blog.yexca.net/archives/184
&lt;/a&gt;
 &lt;br&gt;
03-05: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/185&#34; 

&gt;
https://blog.yexca.net/archives/185
&lt;/a&gt;
 &lt;br&gt;
06-10: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/186&#34; 

&gt;
https://blog.yexca.net/archives/186
&lt;/a&gt;
 &lt;br&gt;
11-15: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/189&#34; 

&gt;
https://blog.yexca.net/archives/189
&lt;/a&gt;
 &lt;br&gt;
16-30: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/190&#34; 

&gt;
https://blog.yexca.net/archives/190
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;碎碎念&#34;&gt;碎碎念
&lt;/h2&gt;&lt;p&gt;星期一总是很累，在经历了周末的休息后总会在今天提不起精神。不过今天也不知道怎么回事我突然就一改之前快抑郁的感觉，尽管什么也没有做来着，突然就变得及其乐观。情感或者状态确实很奇妙&lt;/p&gt;</description>
        </item>
        <item>
        <title>2022 SA am1 -01-02</title>
        <link>https://blog.yexca.net/archives/184/</link>
        <pubDate>Sun, 20 Oct 2024 20:19:11 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/184/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2022 SA am1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;01-02: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/184&#34; 

&gt;
https://blog.yexca.net/archives/184
&lt;/a&gt;
 &lt;br&gt;
03-05: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/185&#34; 

&gt;
https://blog.yexca.net/archives/185
&lt;/a&gt;
 &lt;br&gt;
06-10: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/186&#34; 

&gt;
https://blog.yexca.net/archives/186
&lt;/a&gt;
 &lt;br&gt;
11-15: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/189&#34; 

&gt;
https://blog.yexca.net/archives/189
&lt;/a&gt;
 &lt;br&gt;
16-30: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/190&#34; 

&gt;
https://blog.yexca.net/archives/190
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;那么关于这篇文章，是我想要挑战一下，也没想着会成功，去参加系统架构师考试，也就是计算机专业技术与软件专业技术资格的高级考试，这个考试拿下来的证和学习到的知识可能大多数编码的时候用不上 (其实能用上只是想不到)，但有总比没有好，我尽量可以把这张试卷做完吧，这应该也可以慢慢将我从梦中拉回吧&lt;/p&gt;</description>
        </item>
        <item>
        <title>东京大学大学院理工学 数学 2020 问题一 / 東大院理工学 数学 2020 問題一</title>
        <link>https://blog.yexca.net/archives/183/</link>
        <pubDate>Mon, 14 Oct 2024 21:37:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/183/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;日本語のタイトルを書いても、この文章は主に日本語の内容ではありません。&lt;del&gt;時間があれば追加かもしれません&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;题目一：本文&lt;/p&gt;
&lt;p&gt;题目二：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/187&#34; 

&gt;
https://blog.yexca.net/archives/187
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;题目三：

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/188&#34; 

&gt;
https://blog.yexca.net/archives/188
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;最近几年总是会觉得自己在学习上没有任何的收获，尽管自己可能确实听了课程。于是我便想着尝试去做题目 (是的，学习却不做题这种可能不是特别正常的现象会让当时的我觉得很正常，&lt;del&gt;应该是太懒了&lt;/del&gt;)，结果这一做题目，怎么说呢，做我是不会，搜怎么做我倒是有上过相关课程的印象，于是我几乎是重新学了一遍的同时解完了该题&lt;/p&gt;</description>
        </item>
        <item>
        <title>2024 装机记录</title>
        <link>https://blog.yexca.net/archives/182/</link>
        <pubDate>Wed, 02 Oct 2024 21:35:24 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/182/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;最近因为替换硬碟而重新装了电脑系统，当我掏出那多年未动的 U 盘时里面的软件多少有点过时，有些是已经无法在新系统上运行的，还有好多我已经使用了相同功能的替代品，以及使用了一些新的软件，遂写此文章记录装机用到的软件&lt;/p&gt;</description>
        </item>
        <item>
        <title>宝塔面板搭建 CuteOne</title>
        <link>https://blog.yexca.net/archives/181/</link>
        <pubDate>Tue, 10 Sep 2024 23:06:59 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/181/</guid>
        <description>&lt;p&gt;文章写于 2022.11.30，因早已不使用该面板与 CuteOne，文章并无最新适配，可能无法复现&lt;/p&gt;
&lt;p&gt;同时当时文章并未写完，我无相关需求，仅记录&lt;/p&gt;
&lt;h2 id=&#34;搭建过程&#34;&gt;搭建过程
&lt;/h2&gt;&lt;p&gt;两篇文章&lt;/p&gt;</description>
        </item>
        <item>
        <title>基于 Onedrive 建站 (oneindex)</title>
        <link>https://blog.yexca.net/archives/180/</link>
        <pubDate>Tue, 27 Aug 2024 11:00:24 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/180/</guid>
        <description>&lt;p&gt;文章写于 2022.05.09，文章并无最新适配，可能无法复现。另推荐使用较新的项目&lt;/p&gt;
&lt;p&gt;通过 Onedrive 可以建立网盘网站，例如&lt;del&gt;我的VRChat网盘&lt;/del&gt;已经没了，还可以直接建立网页，或者图床&lt;/p&gt;</description>
        </item>
        <item>
        <title>宝塔面板搭建 OLAINDEX</title>
        <link>https://blog.yexca.net/archives/179/</link>
        <pubDate>Fri, 23 Aug 2024 17:14:26 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/179/</guid>
        <description>&lt;p&gt;文章写于 2022.06.09，因早已不使用该面板与 OLAINDEX，文章并无最新适配，可能无法复现&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不建议使用宝塔面板&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境要求&#34;&gt;环境要求
&lt;/h2&gt;&lt;p&gt;PHP拓展要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHP &amp;gt;= 7.4&lt;/li&gt;
&lt;li&gt;PHP OpenSSL 扩展&lt;/li&gt;
&lt;li&gt;PHP PDO 扩展&lt;/li&gt;
&lt;li&gt;PHP Mbstring 扩展&lt;/li&gt;
&lt;li&gt;PHP Tokenizer 扩展&lt;/li&gt;
&lt;li&gt;PHP XML 扩展&lt;/li&gt;
&lt;li&gt;PHP Ctype 扩展&lt;/li&gt;
&lt;li&gt;PHP JSON 扩展&lt;/li&gt;
&lt;li&gt;PHP BCMath 扩展&lt;/li&gt;
&lt;li&gt;PHP Fileinfo 扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最低安装标准 &lt;code&gt;nginx+php&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>宝塔面板搭建 ZFile</title>
        <link>https://blog.yexca.net/archives/178/</link>
        <pubDate>Fri, 16 Aug 2024 14:43:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/178/</guid>
        <description>&lt;p&gt;文章写于 2022.06.12，本不想发布，但见文章写的较为完整想着发出来留念吧。因早已不使用该面板与 ZFile，文章并无最新适配，可能无法复现&lt;/p&gt;</description>
        </item>
        <item>
        <title>Hexo 安装与使用</title>
        <link>https://blog.yexca.net/archives/177/</link>
        <pubDate>Fri, 09 Aug 2024 08:49:53 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/177/</guid>
        <description>&lt;p&gt;最近服务器快过期了，便想着把 VRC Blog 迁移到 Github 上，于是便想着看看有什么好的主题没，刚开始是想着现在用的 Typecho 主题是从 Jekyll 移植，但 &lt;del&gt;半年前&lt;/del&gt; 去搜索找不到了，然后最近又有点想了解 Hexo，找了半天主题又想到了之前挺喜欢的 Argon 好像有 Hexo 来着，然后便有了这篇文章&lt;/p&gt;</description>
        </item>
        <item>
        <title>算法 n-皇后问题 (回溯法)</title>
        <link>https://blog.yexca.net/archives/176/</link>
        <pubDate>Sun, 28 Jul 2024 14:26:26 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/176/</guid>
        <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述
&lt;/h2&gt;&lt;p&gt;n-皇后问题是在 n 行 n 列的棋盘上放置 n 个皇后，使得皇后彼此之间不受攻击，其规则是任意两个皇后不在同一行、同一列和相同的对角线上 (也就算国际象棋的皇后移动范围)&lt;/p&gt;</description>
        </item>
        <item>
        <title>Typecho HTTPS 无法登录访问后台</title>
        <link>https://blog.yexca.net/archives/175/</link>
        <pubDate>Fri, 26 Jul 2024 22:22:22 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/175/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;之前在移植 typecho 到 Docker 容器后，在开启 HTTPS 后登录后台将会报错，而将 HTTPS 关闭后则可以正常访问。因为在之前非 Docker 部署的时候可以正常访问，我以为是 Docker 网络的问题，而当时的修改是一次性的，不会再进行更新，所以我在关闭 HTTPS 修改完成后便不再管理。如今再次使用 typecho 再次遇到相同问题，考虑到需要更新文章，遂寻解决之法&lt;/p&gt;</description>
        </item>
        <item>
        <title>ElementUI</title>
        <link>https://blog.yexca.net/archives/174/</link>
        <pubDate>Mon, 03 Jun 2024 18:04:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/174/</guid>
        <description>&lt;p&gt;ElementUI 是饿了么团队开发的，一套为开发者、设计师和产品经理准备的基于 Vue2.0 的桌面端组件库&lt;/p&gt;
&lt;p&gt;组件是组成网页的部件，例如超链接、按钮、图片、表格、表单、分页条等&lt;/p&gt;</description>
        </item>
        <item>
        <title>简单Vue项目</title>
        <link>https://blog.yexca.net/archives/173/</link>
        <pubDate>Tue, 28 May 2024 16:22:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/173/</guid>
        <description>&lt;p&gt;早期前后端混合开发，沟通成本高，分工不明确，不便管理，不便维护扩展&lt;/p&gt;
&lt;p&gt;当前主流的开发模式为前后端分离，通过接口文档&lt;/p&gt;
&lt;h2 id=&#34;前后端分离开发&#34;&gt;前后端分离开发
&lt;/h2&gt;&lt;p&gt;前端根据接口文档传输参数根据响应数据解析，后端根据接口文档接收参数并响应&lt;/p&gt;</description>
        </item>
        <item>
        <title>博客运行时间</title>
        <link>https://blog.yexca.net/archives/172/</link>
        <pubDate>Tue, 14 May 2024 11:08:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/172/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;毕业论文真是折磨呢。这是什么时候的文章呢，这个文件创建时间 2023.11.30 而修改时间 2022.09.18，我看不懂，但我大受震撼&lt;/p&gt;
&lt;h2 id=&#34;代码&#34;&gt;代码
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;secondToDate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Array(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parseInt(&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parseInt(&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parseInt(&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parseInt(&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;language&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;javascript&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setTime&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date(Date.&lt;span style=&#34;color:#a6e22e&#34;&gt;UTC&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2021&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;)).&lt;span style=&#34;color:#a6e22e&#34;&gt;getTime&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timestamp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;((&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date().&lt;span style=&#34;color:#a6e22e&#34;&gt;getTime&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;secondToDate&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;timestamp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_time&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTimeHtml&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;This Blog has running: &amp;lt;br/&amp;gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTime&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; y &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTime&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; d &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTime&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; h &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTime&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; m &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTime&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; s&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;htmer_time&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentTimeHtml&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    &lt;span style=&#34;color:#a6e22e&#34;&gt;setInterval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;setTime&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;引用&#34;&gt;引用
&lt;/h2&gt;&lt;p&gt;在想放入的地方加入&lt;/p&gt;</description>
        </item>
        <item>
        <title>Gateway 服务网关</title>
        <link>https://blog.yexca.net/archives/171/</link>
        <pubDate>Sun, 05 May 2024 00:54:52 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/171/</guid>
        <description>&lt;p&gt;Gateway  是所有微服务的统一入口，有以下功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;身份认证和权限检验：网关作为微服务入口，需要校验用户是是否有请求资格，如果没有则进行拦截&lt;/li&gt;
&lt;li&gt;请求路由、负载均衡：一切请求都必须先经过gateway，但网关不处理业务，而是根据某种规则，把请求转发到某个微服务，这个过程叫做路由。当然路由的目标服务有多个时，还需要做负载均衡&lt;/li&gt;
&lt;li&gt;请求限流：当请求流量过高时，在网关中按照下流的微服务能够接受的速度来放行请求，避免服务压力过大&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SpringCloud 的网关实现有两种&lt;/p&gt;</description>
        </item>
        <item>
        <title>Feign 远程调用</title>
        <link>https://blog.yexca.net/archives/170/</link>
        <pubDate>Fri, 03 May 2024 23:11:52 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/170/</guid>
        <description>&lt;p&gt;Feign是一个声明式的 Http 客户端，Github：

&lt;a class=&#34;link&#34; href=&#34;https://github.com/OpenFeign/feign&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://github.com/OpenFeign/feign
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;简单使用&#34;&gt;简单使用
&lt;/h2&gt;&lt;p&gt;引入依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-openfeign&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在启动类添加注解开启 Feign 的功能&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@EnableFeignClients&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编写 Feign 客户端&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@FeignClient&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userService&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserClient&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/user/{id}&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    User &lt;span style=&#34;color:#a6e22e&#34;&gt;findById&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;@PathVariable&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;) Long id);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;替换 RestTemplate&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Service&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OrderService&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; OrderMapper orderMapper;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// @Autowired&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// private RestTemplate restTemplate;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; UserClient userClient;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Order &lt;span style=&#34;color:#a6e22e&#34;&gt;queryOrderById&lt;/span&gt;(Long orderId) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 1.查询订单&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Order order &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; orderMapper.&lt;span style=&#34;color:#a6e22e&#34;&gt;findById&lt;/span&gt;(orderId);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 2.查询用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// String url = &amp;#34;http://localhost:8081/user/&amp;#34; + order.getUserId();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        String url = &amp;#34;http://userService/user/&amp;#34; + order.getUserId();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        User user = restTemplate.getForObject(url, User.class);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Feign&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        User user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; userClient.&lt;span style=&#34;color:#a6e22e&#34;&gt;findById&lt;/span&gt;(order.&lt;span style=&#34;color:#a6e22e&#34;&gt;getUserId&lt;/span&gt;());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 3.封装用户信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        order.&lt;span style=&#34;color:#a6e22e&#34;&gt;setUser&lt;/span&gt;(user);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 4.返回&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; order;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;自定义配置&#34;&gt;自定义配置
&lt;/h2&gt;&lt;p&gt;Feign运行自定义配置来覆盖默认配置，可以修改的配置如下：&lt;/p&gt;</description>
        </item>
        <item>
        <title>Nacos 注册中心</title>
        <link>https://blog.yexca.net/archives/169/</link>
        <pubDate>Thu, 02 May 2024 22:36:17 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/169/</guid>
        <description>&lt;p&gt;需先安装软件，官网：

&lt;a class=&#34;link&#34; href=&#34;https://nacos.io/zh-cn/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://nacos.io/zh-cn/
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;conf/application.properties&lt;/code&gt; 文件中可以更改端口，默认为 8848&lt;/p&gt;
&lt;h2 id=&#34;注册服务&#34;&gt;注册服务
&lt;/h2&gt;&lt;p&gt;父工程中添加管理依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alibaba.cloud&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-alibaba-dependencies&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2.6.RELEASE&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注释掉 Eureka 的依赖，并添加 Nacos 客户端的依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alibaba.cloud&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改 application.yml，添加 Nacos 地址，注释 Eureka 地址&lt;/p&gt;</description>
        </item>
        <item>
        <title>Ribbon 负载均衡</title>
        <link>https://blog.yexca.net/archives/168/</link>
        <pubDate>Sun, 28 Apr 2024 15:50:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/168/</guid>
        <description>&lt;p&gt;消费者发起请求会被 Ribbon 拦截，Ribbon 从 Eureka 拉取提供者列表，Eureka 返回提供者列表，Ribbon 根据 IRule 选择服务器发起请求&lt;/p&gt;
&lt;p&gt;详细拦截：请求-&amp;gt;DynamicServerListLoadBalancer (获取url中的服务id,userService)-&amp;gt;DynamicServerListLoadBalancer-&amp;gt;Eureka-&amp;gt;DynamicServerListLoadBalancer-&amp;gt;IRule-&amp;gt;DynamicServerListLoadBalancer -&amp;gt;发起请求&lt;/p&gt;</description>
        </item>
        <item>
        <title>CSS 盒子模型</title>
        <link>https://blog.yexca.net/archives/167/</link>
        <pubDate>Sat, 13 Apr 2024 22:06:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/167/</guid>
        <description>&lt;h2 id=&#34;显示模式&#34;&gt;显示模式
&lt;/h2&gt;&lt;p&gt;显示模式即标签的显示方式，用于布局网页的时候，根据标签的显示模式选择合适的标签摆放内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;块级元素 (例如 div)
&lt;ul&gt;
&lt;li&gt;独占一行&lt;/li&gt;
&lt;li&gt;宽度默认是父级的 100%&lt;/li&gt;
&lt;li&gt;添加宽高属性生效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;行内元素 (例如 span)
&lt;ul&gt;
&lt;li&gt;一行可以显示多个&lt;/li&gt;
&lt;li&gt;设置宽高属性不生效&lt;/li&gt;
&lt;li&gt;宽高尺寸由内容撑开&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;行内块元素 (例如 img)
&lt;ul&gt;
&lt;li&gt;一行可以显示多个&lt;/li&gt;
&lt;li&gt;设置宽高属性生效&lt;/li&gt;
&lt;li&gt;宽高尺寸也可以由内容撑开&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以通过 CSS 属性 &lt;code&gt;display&lt;/code&gt; 转换显示模式，取值为：&lt;/p&gt;</description>
        </item>
        <item>
        <title>CSS 背景属性</title>
        <link>https://blog.yexca.net/archives/166/</link>
        <pubDate>Wed, 10 Apr 2024 16:21:51 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/166/</guid>
        <description>&lt;p&gt;背景属性有以下这些&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;属性&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;背景色&lt;/td&gt;
          &lt;td&gt;background-color&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;背景图&lt;/td&gt;
          &lt;td&gt;background-image&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;背景图平铺方式&lt;/td&gt;
          &lt;td&gt;background-repeat&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;背景图位置&lt;/td&gt;
          &lt;td&gt;background-position&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;背景图缩放&lt;/td&gt;
          &lt;td&gt;background-size&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;背景图固定&lt;/td&gt;
          &lt;td&gt;background-attachment&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;背景图复合属性&lt;/td&gt;
          &lt;td&gt;background&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;背景图&#34;&gt;背景图
&lt;/h2&gt;&lt;p&gt;网页中使用背景图实现装饰性的图片效果&lt;/p&gt;</description>
        </item>
        <item>
        <title>CSS 文字控制属性</title>
        <link>https://blog.yexca.net/archives/165/</link>
        <pubDate>Thu, 14 Mar 2024 21:07:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/165/</guid>
        <description>&lt;p&gt;文字控制属性可控制的内容如下&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;属性&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;字体大小&lt;/td&gt;
          &lt;td&gt;font-size&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;字体粗细&lt;/td&gt;
          &lt;td&gt;font-weight&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;字体倾斜&lt;/td&gt;
          &lt;td&gt;font-style&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;行高&lt;/td&gt;
          &lt;td&gt;line-height&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;字体族&lt;/td&gt;
          &lt;td&gt;font-family&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;字体复合属性&lt;/td&gt;
          &lt;td&gt;font&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;文本缩进&lt;/td&gt;
          &lt;td&gt;text-indent&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;文本对齐&lt;/td&gt;
          &lt;td&gt;text-align&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;修饰线&lt;/td&gt;
          &lt;td&gt;text-decoration&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;颜色&lt;/td&gt;
          &lt;td&gt;color&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;字体大小&#34;&gt;字体大小
&lt;/h3&gt;&lt;p&gt;属性值为文字尺寸，单位一般为 px&lt;/p&gt;</description>
        </item>
        <item>
        <title>CSS 三大特性</title>
        <link>https://blog.yexca.net/archives/164/</link>
        <pubDate>Mon, 11 Mar 2024 16:38:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/164/</guid>
        <description>&lt;p&gt;CSS 三大特性：继承性、层叠性、优先级&lt;/p&gt;
&lt;h2 id=&#34;继承性&#34;&gt;继承性
&lt;/h2&gt;&lt;p&gt;子级默认继承父级的文字控制属性，若子级有自己的样式则不继承&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;font&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;楷体&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;aqua&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;div&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;p&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;span&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt;&amp;gt;不继承颜色&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;层叠性&#34;&gt;层叠性
&lt;/h2&gt;&lt;p&gt;选择器类型相同时：&lt;/p&gt;</description>
        </item>
        <item>
        <title>CSS 选择器</title>
        <link>https://blog.yexca.net/archives/163/</link>
        <pubDate>Sat, 02 Mar 2024 17:15:35 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/163/</guid>
        <description>&lt;h2 id=&#34;css-引入方式&#34;&gt;CSS 引入方式
&lt;/h2&gt;&lt;p&gt;CSS 有三种引入方式，第一种为内部样式表，此方式仅学习使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        	&lt;span style=&#34;color:#75715e&#34;&gt;/* 此处写 CSS */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二种为行内样式，一般配合 JavaScript 使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;此处写 CSS&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后一种为外部样式表，将 CSS 代码写在单独文件，通过 link 标签引入，开发时常用&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang 面向对象</title>
        <link>https://blog.yexca.net/archives/162/</link>
        <pubDate>Fri, 01 Mar 2024 15:35:38 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/162/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: This Page&lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;通过使用结构体构建类与对象的概念&lt;/p&gt;</description>
        </item>
        <item>
        <title>注册中心 - Eureka</title>
        <link>https://blog.yexca.net/archives/161/</link>
        <pubDate>Thu, 29 Feb 2024 16:53:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/161/</guid>
        <description>&lt;p&gt;引入注册中心之前先引入提供者与消费者概念&lt;/p&gt;
&lt;h2 id=&#34;提供者与消费者&#34;&gt;提供者与消费者
&lt;/h2&gt;&lt;p&gt;服务提供者：一次业务中，被其它微服务调用的服务。（提供接口给其它微服务）&lt;/p&gt;
&lt;p&gt;服务消费者：一次业务中，调用其它微服务的服务。（调用其它微服务提供的接口）&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang 切片</title>
        <link>https://blog.yexca.net/archives/160/</link>
        <pubDate>Tue, 27 Feb 2024 20:00:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/160/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: This Page&lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Go 的切片是对数组的抽象&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 定时任务 crontab</title>
        <link>https://blog.yexca.net/archives/159/</link>
        <pubDate>Mon, 26 Feb 2024 21:34:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/159/</guid>
        <description>&lt;p&gt;&lt;del&gt;这篇文章还是有点久远的，书写习惯和现在不同，甚至看着有点不习惯&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;通过 crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell script 脚本。时间间隔的单位可以是分钟、小时、日、月、周及以上的任意组合&lt;/p&gt;</description>
        </item>
        <item>
        <title>Hi SpringCloud</title>
        <link>https://blog.yexca.net/archives/158/</link>
        <pubDate>Sun, 25 Feb 2024 17:56:54 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/158/</guid>
        <description>&lt;h2 id=&#34;服务架构&#34;&gt;服务架构
&lt;/h2&gt;&lt;h3 id=&#34;单体架构&#34;&gt;单体架构
&lt;/h3&gt;&lt;p&gt;将业务的所有功能集中在一个项目中开发，打包一个包部署&lt;/p&gt;
&lt;p&gt;优点：架构简单、扩展性差、部署成本低，适合小型项目&lt;/p&gt;
&lt;p&gt;缺点：耦合度高&lt;/p&gt;
&lt;h3 id=&#34;分布式架构&#34;&gt;分布式架构
&lt;/h3&gt;&lt;p&gt;根据业务功能对系统进行拆分，每个业务模块作为独立项目开发，称为一个服务&lt;/p&gt;</description>
        </item>
        <item>
        <title>Redis</title>
        <link>https://blog.yexca.net/archives/157/</link>
        <pubDate>Fri, 23 Feb 2024 16:40:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/157/</guid>
        <description>&lt;p&gt;Redis 是一个基于内存的 key-value 结构数据库，是互联网技术领域使用最为广泛的存储中间件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官网：

&lt;a class=&#34;link&#34; href=&#34;https://redis.io&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://redis.io
&lt;/a&gt;
 &lt;/li&gt;
&lt;li&gt;中文网：

&lt;a class=&#34;link&#34; href=&#34;https://www.redis.net.cn/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://www.redis.net.cn/
&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Redis 基于内存存储，读写性能高，适合存储热点数据 (商品、资讯、新闻) 。是用 C 语言开发的一个开源的高性能键值对数据库，存储 value 类型比较丰富，也被称为结构化的 NoSql (Not Only SQL) 数据库&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang 函数</title>
        <link>https://blog.yexca.net/archives/156/</link>
        <pubDate>Thu, 22 Feb 2024 04:47:28 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/156/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: This Page&lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;多返回值&#34;&gt;多返回值
&lt;/h2&gt;&lt;p&gt;Go 函数可以返回多个值&lt;/p&gt;</description>
        </item>
        <item>
        <title>GoLang 变量与常量</title>
        <link>https://blog.yexca.net/archives/155/</link>
        <pubDate>Tue, 20 Feb 2024 06:41:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/155/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/154&#34; 

&gt;
https://blog.yexca.net/archives/154
&lt;/a&gt;
 &lt;br&gt;
GoLang (var and const) 变量与常量: This Page&lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量
&lt;/h2&gt;&lt;p&gt;声明变量一般使用 var 关键字&lt;/p&gt;</description>
        </item>
        <item>
        <title>Hello GoLang</title>
        <link>https://blog.yexca.net/archives/154/</link>
        <pubDate>Mon, 19 Feb 2024 07:58:37 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/154/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Golang Series&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello GoLang: This Page&lt;br&gt;
GoLang (var and const) 变量与常量: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/155&#34; 

&gt;
https://blog.yexca.net/archives/155
&lt;/a&gt;
 &lt;br&gt;
GoLang (func) 函数: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/156&#34; 

&gt;
https://blog.yexca.net/archives/156
&lt;/a&gt;
 &lt;br&gt;
GoLang (slice and map) 切片: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/160&#34; 

&gt;
https://blog.yexca.net/archives/160
&lt;/a&gt;
 &lt;br&gt;
GoLang (OOP) 面向对象: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/162&#34; 

&gt;
https://blog.yexca.net/archives/162
&lt;/a&gt;
 &lt;br&gt;
GoLang (reflect) 反射: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/204&#34; 

&gt;
https://blog.yexca.net/archives/204
&lt;/a&gt;
 &lt;br&gt;
GoLang (struct tag) 结构体标签: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/205&#34; 

&gt;
https://blog.yexca.net/archives/205
&lt;/a&gt;
 &lt;br&gt;
GoLang (goroutine) go 程: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/206&#34; 

&gt;
https://blog.yexca.net/archives/206
&lt;/a&gt;
 &lt;br&gt;
GoLang (channel) 通道: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/207&#34; 

&gt;
https://blog.yexca.net/archives/207
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Go 下载：

&lt;a class=&#34;link&#34; href=&#34;https://go.dev/dl/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://go.dev/dl/
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>CentOS 7 安装 Xfce</title>
        <link>https://blog.yexca.net/archives/153/</link>
        <pubDate>Sat, 17 Feb 2024 22:51:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/153/</guid>
        <description>&lt;p&gt;&lt;del&gt;这是什么时候写的文章啊（&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;查看是否有-xfce-组&#34;&gt;查看是否有 Xfce 组
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum grouplist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果没有，需要安装额外包 yum 源&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install epel-release -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-x-window-system&#34;&gt;安装 X Window system
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum groupinstall &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X Window system&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-xfce&#34;&gt;安装 Xfce
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum groupinstall xfce
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装中文字体-楷体&#34;&gt;安装中文字体 (楷体)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install cjkuni-ukai-fonts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;进入-xfce-桌面&#34;&gt;进入 Xfce 桌面
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl isolate graphical.target
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考文章&#34;&gt;参考文章
&lt;/h2&gt;&lt;p&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_28641401/article/details/99428192&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
CentOS 7安装Xfce桌面环境过程_qq_28641401的博客-CSDN博客
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>微信登录后端</title>
        <link>https://blog.yexca.net/archives/152/</link>
        <pubDate>Sat, 10 Feb 2024 18:09:17 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/152/</guid>
        <description>&lt;p&gt;Happy Lunar Year!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;流程：

&lt;a class=&#34;link&#34; href=&#34;https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;前端获取授权码，向 

&lt;a class=&#34;link&#34; href=&#34;https://api.weixin.qq.com/sns/jscode2session&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://api.weixin.qq.com/sns/jscode2session
&lt;/a&gt;
  发起请求，获取 session_key 和 openid&lt;/p&gt;
&lt;p&gt;微信请求接口：

&lt;a class=&#34;link&#34; href=&#34;https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/user-login/code2Session.html&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/user-login/code2Session.html
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;分析设计&#34;&gt;分析设计
&lt;/h2&gt;&lt;h3 id=&#34;接口设计&#34;&gt;接口设计
&lt;/h3&gt;&lt;p&gt;请求路径：/user/user/login&lt;/p&gt;
&lt;p&gt;请求方式：POST&lt;/p&gt;
&lt;p&gt;请求参数：code String (微信用户授权码)&lt;/p&gt;</description>
        </item>
        <item>
        <title>了解微信小程序</title>
        <link>https://blog.yexca.net/archives/151/</link>
        <pubDate>Wed, 31 Jan 2024 16:50:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/151/</guid>
        <description>&lt;p&gt;官网：

&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/cgi-bin/wx&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://mp.weixin.qq.com/cgi-bin/wx
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;开发小程序之前需要先注册一个小程序，可以使用不同主体注册小程序，相应的权限也不同。例如以个人的身份注册小程序是无法获得支付权限的 (也可以使用测试号体验)&lt;/p&gt;</description>
        </item>
        <item>
        <title>HTML 学习二 - 列表、表格与表单</title>
        <link>https://blog.yexca.net/archives/150/</link>
        <pubDate>Mon, 29 Jan 2024 13:24:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/150/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;HTML 学习一 - 基础: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/146&#34; 

&gt;
https://blog.yexca.net/archives/146
&lt;/a&gt;
 &lt;br&gt;
HTML 学习二 - 列表、表格与表单: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/150&#34; 

&gt;
https://blog.yexca.net/archives/150
&lt;/a&gt;
 &lt;br&gt;
HTML 学习三 - 网页布局: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/195&#34; 

&gt;
https://blog.yexca.net/archives/195
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;列表&#34;&gt;列表
&lt;/h2&gt;&lt;p&gt;列表分为无序、有序列表和定义列表&lt;/p&gt;
&lt;h3 id=&#34;无序列表&#34;&gt;无序列表
&lt;/h3&gt;&lt;p&gt;unordered list -&amp;gt; list&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;第一项&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;第二项&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;第三项&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果如下&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ordered list -&amp;gt; list&lt;/p&gt;</description>
        </item>
        <item>
        <title>Fedora 开机启动运行脚本</title>
        <link>https://blog.yexca.net/archives/149/</link>
        <pubDate>Sun, 28 Jan 2024 14:25:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/149/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;千万不要把死循环放进去啊！！！使用 systemd 方式&lt;/p&gt;
&lt;h2 id=&#34;新建脚本&#34;&gt;新建脚本
&lt;/h2&gt;&lt;p&gt;在此文件中写入您的脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi /etc/rc.d/rc.local
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;赋予执行权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x /etc/rc.d/rc.local
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;编辑启动状态&#34;&gt;编辑启动状态
&lt;/h2&gt;&lt;p&gt;编辑文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi /usr/lib/systemd/system/rc-local.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在最后一行加入 &lt;em&gt;[Install]&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  This file is part of systemd.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  systemd is free software; you can redistribute it and/or modify it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  under the terms of the GNU Lesser General Public License as published by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  the Free Software Foundation; either version 2.1 of the License, or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  (at your option) any later version.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This unit gets pulled automatically into multi-user.target by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# systemd-rc-local-generator if /etc/rc.d/rc.local is executable.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Unit&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/etc/rc.d/rc.local Compatibility
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ConditionFileIsExecutable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/etc/rc.d/rc.local
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;After&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;network.target
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;forking
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ExecStart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/etc/rc.d/rc.local start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TimeoutSec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RemainAfterExit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SysVStartPriority&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Install&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WantedBy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;multi-user.target
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后使用 systemd 开机自启动&lt;/p&gt;</description>
        </item>
        <item>
        <title>JavaScript 学习</title>
        <link>https://blog.yexca.net/archives/148/</link>
        <pubDate>Mon, 22 Jan 2024 19:51:24 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/148/</guid>
        <description>&lt;p&gt;JS 是一门跨平台、面向对象的脚本语言，是用来控制网页行为的，使网页可交互&lt;/p&gt;
&lt;h2 id=&#34;js-引入方式&#34;&gt;JS 引入方式
&lt;/h2&gt;&lt;p&gt;分为内部脚本和外部脚本两种&lt;/p&gt;
&lt;h3 id=&#34;内部脚本&#34;&gt;内部脚本
&lt;/h3&gt;&lt;p&gt;将 js 代码定义在 HTML 页面中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS 代码必须位于 &lt;code&gt;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 标签之间&lt;/li&gt;
&lt;li&gt;在 HTML 文档中，可以在任意地方，放置任意数量的 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一般会把脚本置于 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 元素的底部，可以改善显示速度&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello JavaScript&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;外部脚本&#34;&gt;外部脚本
&lt;/h3&gt;&lt;p&gt;将 JS 代码定义在外部 JS 文件中，然后引入到 HTML 页面中&lt;/p&gt;</description>
        </item>
        <item>
        <title>三层架构与分层解耦</title>
        <link>https://blog.yexca.net/archives/147/</link>
        <pubDate>Fri, 19 Jan 2024 10:37:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/147/</guid>
        <description>&lt;h2 id=&#34;案例引入&#34;&gt;案例引入
&lt;/h2&gt;&lt;p&gt;获取员工数据，返回统一响应结果，在页面渲染展示&lt;/p&gt;
&lt;p&gt;首先需要引入 dom4j 依赖，用于解析 xml 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.dom4j&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;dom4j&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.1.3&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;引入解析 XML 的工具类 XMLParserUtils、对应实体类 Emp、XML 文件 emp.xml&lt;/p&gt;</description>
        </item>
        <item>
        <title>HTML 学习一 - 基础</title>
        <link>https://blog.yexca.net/archives/146/</link>
        <pubDate>Thu, 18 Jan 2024 14:43:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/146/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;HTML 学习一 - 基础: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/146&#34; 

&gt;
https://blog.yexca.net/archives/146
&lt;/a&gt;
 &lt;br&gt;
HTML 学习二 - 列表、表格与表单: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/150&#34; 

&gt;
https://blog.yexca.net/archives/150
&lt;/a&gt;
 &lt;br&gt;
HTML 学习三 - 网页布局: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/195&#34; 

&gt;
https://blog.yexca.net/archives/195
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;基本骨架&#34;&gt;基本骨架
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;网页标题&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        网页主体
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般有软件生成，例如在 VS Code 里可以新建 &lt;code&gt;.html&lt;/code&gt; 文件后输入英文 &lt;code&gt;!&lt;/code&gt; 按 &lt;code&gt;TAB&lt;/code&gt; 键自动生成&lt;/p&gt;</description>
        </item>
        <item>
        <title>结构化开发</title>
        <link>https://blog.yexca.net/archives/145/</link>
        <pubDate>Tue, 16 Jan 2024 08:10:10 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/145/</guid>
        <description>&lt;h2 id=&#34;系统设计的基本原理&#34;&gt;系统设计的基本原理
&lt;/h2&gt;&lt;p&gt;抽象、模块化、信息隐蔽、模块独立&lt;/p&gt;
&lt;h3 id=&#34;模块化&#34;&gt;模块化
&lt;/h3&gt;&lt;p&gt;在软件的体系结构中，模块是可组合、分解和更换的单元&lt;/p&gt;
&lt;p&gt;模块化是指将一个待开发的软件分解成若干个小的简单部分，即模块。每个模块可独立地开发、测试，最后组装成完整的程序。这是一种复杂问题 &amp;ldquo;分而治之&amp;rdquo; 的原则。模块化的目的是使程序的结构清晰，容易阅读、理解、测试和修改&lt;/p&gt;</description>
        </item>
        <item>
        <title>Spring 请求响应</title>
        <link>https://blog.yexca.net/archives/144/</link>
        <pubDate>Sun, 14 Jan 2024 16:47:28 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/144/</guid>
        <description>&lt;p&gt;浏览器发送请求会先经过 DispatcherServlet 转给各 *Controller 程序进行处理，处理完成后返回给 DispatcherServlet 处理结果，然后再返回浏览器&lt;/p&gt;
&lt;p&gt;DispatcherServlet 被称为核心控制器或前端控制器&lt;/p&gt;
&lt;p&gt;对于浏览器请求数据，会被封装到 HttpServletRequest 对象，响应数据被封装到 HttpServletResponse&lt;/p&gt;</description>
        </item>
        <item>
        <title>maven 学习</title>
        <link>https://blog.yexca.net/archives/143/</link>
        <pubDate>Sat, 13 Jan 2024 23:58:42 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/143/</guid>
        <description>&lt;p&gt;Maven 是一款用于管理和构建 java 项目的工具&lt;/p&gt;
&lt;p&gt;Maven 可以方便快捷的管理项目依赖的资源 (jar 包)，避免版本冲突问题；提供标准、统一的项目结构；标准跨平台的自动化项目构建方式&lt;/p&gt;</description>
        </item>
        <item>
        <title>JavaWeb 入门</title>
        <link>https://blog.yexca.net/archives/142/</link>
        <pubDate>Wed, 10 Jan 2024 17:53:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/142/</guid>
        <description>&lt;h2 id=&#34;springboot-入门例子&#34;&gt;SpringBoot 入门例子
&lt;/h2&gt;&lt;p&gt;需求：使用 SpringBoot 开发一个 web 应用，浏览器发起 /hello 后，返回字符串 “Hello Spring”&lt;/p&gt;
&lt;p&gt;首先需要创建 SpringBoot 工程，并勾选 web 开发相关依赖&lt;/p&gt;
&lt;p&gt;然后创建控制类，路径在 &lt;code&gt;*Application.java&lt;/code&gt; 同级创建文件 &lt;code&gt;Controller/HelloController.java&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Docker 创建与推送 H5 镜像</title>
        <link>https://blog.yexca.net/archives/141/</link>
        <pubDate>Tue, 09 Jan 2024 21:50:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/141/</guid>
        <description>&lt;p&gt;新建目录，将网页文件放入 &lt;code&gt;./dict&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;根目录装进文件 &lt;code&gt;dockerfile&lt;/code&gt; 内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 基于nginx:1.20镜像&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; nginx:1.20&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将dist文件中的内容复制到 /usr/share/nginx/html/ 这个目录下面&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; dist/ /usr/share/nginx/html/dist/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 用本地的 nginx.conf 配置来替换nginx镜像里的默认配置&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; nginx.conf /etc/nginx/nginx.conf&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;新建文件 &lt;code&gt;nginx.conf&lt;/code&gt; 内容如下：&lt;/p&gt;</description>
        </item>
        <item>
        <title>设计模式 Index</title>
        <link>https://blog.yexca.net/archives/140/</link>
        <pubDate>Wed, 27 Dec 2023 16:14:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/140/</guid>
        <description>&lt;p&gt;简单介绍设计模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/108&#34; 

&gt;
设计模式 引
&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体的设计模式&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;创建型&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;结构型&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;行为型&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;类&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;工厂方法模式&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;适配器模式 (类)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/126&#34; 

&gt;
解释器模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/138&#34; 

&gt;
模板方法模式
&lt;/a&gt;
 &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;对象&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;抽象工厂模式&lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/112&#34; 

&gt;
生成器模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/113&#34; 

&gt;
原型模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/115&#34; 

&gt;
单例模式
&lt;/a&gt;
 &lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;适配器模式 (对象)&lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/118&#34; 

&gt;
桥接模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/119&#34; 

&gt;
组合模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/120&#34; 

&gt;
装饰器模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/121&#34; 

&gt;
外观模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/122&#34; 

&gt;
享元模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/123&#34; 

&gt;
代理模式
&lt;/a&gt;
 &lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/124&#34; 

&gt;
责任链模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/125&#34; 

&gt;
命令模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/127&#34; 

&gt;
迭代器模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/128&#34; 

&gt;
中介者模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/132&#34; 

&gt;
备忘录模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/134&#34; 

&gt;
观察者模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/136&#34; 

&gt;
状态模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/137&#34; 

&gt;
策略模式
&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/139&#34; 

&gt;
访问者模式
&lt;/a&gt;
 &lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中&lt;/p&gt;</description>
        </item>
        <item>
        <title>访问者模式</title>
        <link>https://blog.yexca.net/archives/139/</link>
        <pubDate>Tue, 26 Dec 2023 16:09:09 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/139/</guid>
        <description>&lt;p&gt;Visitor Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;表示一个作用于某对象结构中的各元素的操作。它不允许在不改变各元素的类的前提下定义作用于这些元素的新操作&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e8%ae%bf%e9%97%ae%e8%80%85%e6%a8%a1%e5%bc%8f.5psqrqdq7gs0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;访问者模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visitor (访问者) 为该对象结构中 ConcreteElement 的每一个类声明一个 Visit 操作。该操作的名字和特殊标识了发送 Visit 请求给该访问者的那个类，这使得访问者可以确定正被访问元素的具体的类。这样访问者就可以通过该元素的特定接口直接访问它&lt;/li&gt;
&lt;li&gt;ConcreteVisitor (具体访问者) 实现每个有 Visitor 声明的操作，每个操作实现本算法的一部分，而该算法片段乃是对应于结构中对象的类。ConcreteVisitor 为该算法提供了上下文并存储它的局部状态。这一状态常常在遍历该结构的过程中累积结构&lt;/li&gt;
&lt;li&gt;Element (元素) 定义以一个访问者为参数的 Accept 操作&lt;/li&gt;
&lt;li&gt;ConcreteElement (具体元素) 实现以一个访问者为参数的 Accept 操作&lt;/li&gt;
&lt;li&gt;ObjectStructure (对象结构) 能枚举它的元素；可以提供一个高层的接口以允许该访问者访问它的元素；可以是一个组合或者一个集合，如一个列表或一个无序集合&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Visitor 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>模板方法模式</title>
        <link>https://blog.yexca.net/archives/138/</link>
        <pubDate>Mon, 25 Dec 2023 21:06:06 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/138/</guid>
        <description>&lt;p&gt;Template Method Pattern 类行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;定义一个操作中的算法骨架，而将一些步骤延迟到子类中。Template Method 使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤&lt;/p&gt;</description>
        </item>
        <item>
        <title>策略模式</title>
        <link>https://blog.yexca.net/archives/137/</link>
        <pubDate>Sun, 24 Dec 2023 18:30:30 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/137/</guid>
        <description>&lt;p&gt;Strategy Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e7%ad%96%e7%95%a5%e6%a8%a1%e5%bc%8f.71vxrbauk9s0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;策略模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Strategy (策略) 定义所有支持的算法的公共接口。Context 使用这个接口来调用某 ConcreteStrategy 定义的算法&lt;/p&gt;</description>
        </item>
        <item>
        <title>状态模式</title>
        <link>https://blog.yexca.net/archives/136/</link>
        <pubDate>Fri, 22 Dec 2023 15:11:16 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/136/</guid>
        <description>&lt;p&gt;State Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e7%8a%b6%e6%80%81%e6%a8%a1%e5%bc%8f.775ry4zlh4g0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;状态模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Context (上下文) 定义客户感兴趣的接口：维护一个 ConcerteState 子类的实例，这个实例定义当前状态&lt;/p&gt;</description>
        </item>
        <item>
        <title>Ajax 与 Axios</title>
        <link>https://blog.yexca.net/archives/135/</link>
        <pubDate>Thu, 21 Dec 2023 13:32:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/135/</guid>
        <description>&lt;p&gt;Asynchronous JavaScript And XML，异步的 JS 和 XML。作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据交换：通过 Ajax 可以给服务器发送请求，并获取服务器响应的数据&lt;/li&gt;
&lt;li&gt;异步交互：可以在不重新加载整个页面的情况下，与服务器交换数据并更新部分网页的技术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用场景：搜索联想、用户名是否可用等&lt;/p&gt;</description>
        </item>
        <item>
        <title>观察者模式</title>
        <link>https://blog.yexca.net/archives/134/</link>
        <pubDate>Thu, 21 Dec 2023 01:18:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/134/</guid>
        <description>&lt;h1 id=&#34;观察者模式&#34;&gt;观察者模式
&lt;/h1&gt;&lt;p&gt;Observer Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变吋，所有依赖于它的对象都得到通知并被自动更新&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e8%a7%82%e5%af%9f%e8%80%85%e6%a8%a1%e5%bc%8f.5x607bf0xvw0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;观察者模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Subject (目标) 知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口&lt;/li&gt;
&lt;li&gt;Observer (观察者) 为那些在&amp;quot;目标发生改变时需获得通知的对象定义一个更新接口&lt;/li&gt;
&lt;li&gt;ConcreteSubject (具体目标) 将有关状态存入各 ConcreteObserver 对象：当它的状态发生改变时，向它的各个观察者发出通知&lt;/li&gt;
&lt;li&gt;ConcreteObserver (具体观察者) 维护一个指向 ConcreteSubject 对象的引用：存储有关状态，这些状态应与目标的状态保持一致：实现 Observer 的更新接口，以使自身状态与目标的状态保持一致&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Observer 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>hvdb 注册检测</title>
        <link>https://blog.yexca.net/archives/133/</link>
        <pubDate>Sat, 02 Dec 2023 21:23:01 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/133/</guid>
        <description>&lt;p&gt;从 ???? &lt;del&gt;我记不清了&lt;/del&gt; 开始喜欢上 ASMR 后就接触到了音声，不过高昂的价格显然会驱使我去广袤的互联网上搜索，于是便知道了这个网站，可此网站只有登录后才可以看到更多内容，而每年也几乎是不定时开放注册，这使我很好奇这个网站&lt;/p&gt;</description>
        </item>
        <item>
        <title>备忘录模式</title>
        <link>https://blog.yexca.net/archives/132/</link>
        <pubDate>Mon, 27 Nov 2023 14:08:05 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/132/</guid>
        <description>&lt;p&gt;Memento Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;在不破坏封装性的前提下捕获一个对象的内部状态，并在对象之外保存这个状态。这样以后就可以将对象恢复到原先保存的状态&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e5%a4%87%e5%bf%98%e5%bd%95%e6%a8%a1%e5%bc%8f.5pa8d63vllc0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;备忘录模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Memento (备忘录) 存储原发器对象的内部状态，原发器根据需要决定备忘录存储原发器的哪些内部状态；防止原发器以外的其他对象访问备忘录&lt;/li&gt;
&lt;li&gt;Originator (原发器) 创建一个备忘录，用于记录当前时刻它的内部状态；使用备忘录恢复内部状态&lt;/li&gt;
&lt;li&gt;Caretaker (管理者) 负责保存好备忘录；不能对备忘录的内容进行操作或检查&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Memento 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>2023 新服务器部署记录</title>
        <link>https://blog.yexca.net/archives/131/</link>
        <pubDate>Fri, 03 Nov 2023 15:34:01 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/131/</guid>
        <description>&lt;p&gt;自从博客转移到 Github 上后本打算就这样不再购买新服务器的，不过可能是这几个月很平静使得我迫切想折腾一阵，也可能是 &lt;em&gt;我可以不用，但不能没有&lt;/em&gt; 的心理使我冲动消费了一次&lt;/p&gt;</description>
        </item>
        <item>
        <title>网易云音乐 2020-2022 年度报告</title>
        <link>https://blog.yexca.net/archives/130/</link>
        <pubDate>Sun, 29 Oct 2023 23:45:01 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/130/</guid>
        <description>&lt;h2 id=&#34;网站&#34;&gt;网站
&lt;/h2&gt;&lt;p&gt;手机访问即可查看 (只试过 IOS)&lt;/p&gt;
&lt;p&gt;2020:

&lt;a class=&#34;link&#34; href=&#34;https://st.music.163.com/c/year2020&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://st.music.163.com/c/year2020
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;2021:

&lt;a class=&#34;link&#34; href=&#34;https://st.music.163.com/c/year2021&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://st.music.163.com/c/year2021
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;2022:

&lt;a class=&#34;link&#34; href=&#34;https://st.music.163.com/c/year2022&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://st.music.163.com/c/year2022
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;过程&#34;&gt;过程
&lt;/h2&gt;&lt;p&gt;Google 搜索 &lt;em&gt;网易云年度报告&lt;/em&gt;，发现 

&lt;a class=&#34;link&#34; href=&#34;https://st.music.163.com/c/reportreview2020&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://st.music.163.com/c/reportreview2020
&lt;/a&gt;
  (手机访问情况下会出现 2020 年度报告入口)，顺着网站试着修改年份，发现 2020-2022 可以查看&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 Index</title>
        <link>https://blog.yexca.net/archives/129/</link>
        <pubDate>Sat, 21 Oct 2023 14:18:15 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/129/</guid>
        <description>&lt;p&gt;此文章写于 2022.12，由于多种原因未发布&lt;/p&gt;
&lt;p&gt;该系列文章为我阅读《Linux 系统管理、服务器设置、安全、云数据中心》所书写相关笔记&lt;/p&gt;
&lt;h2 id=&#34;第一部分入门&#34;&gt;第一部分：入门
&lt;/h2&gt;&lt;p&gt;这部分没有记录文章&lt;/p&gt;</description>
        </item>
        <item>
        <title>中介者模式</title>
        <link>https://blog.yexca.net/archives/128/</link>
        <pubDate>Sun, 15 Oct 2023 17:14:26 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/128/</guid>
        <description>&lt;p&gt;Mediator Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间地交互&lt;/p&gt;</description>
        </item>
        <item>
        <title>迭代器模式</title>
        <link>https://blog.yexca.net/archives/127/</link>
        <pubDate>Thu, 12 Oct 2023 09:09:24 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/127/</guid>
        <description>&lt;p&gt;Iterator Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;提供一种方法顺序访问一个聚合对象中的各个元素，且不需要暴露该对象的内部表示&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e8%bf%ad%e4%bb%a3%e5%99%a8%e6%a8%a1%e5%bc%8f.3qxn134hel60.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;迭代器模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Iterator (迭代器) 定义访问和遍历元素的接口&lt;/li&gt;
&lt;li&gt;ConcreteIterator (具体迭代器) 实现迭代器接口；对该聚合遍历时跟踪当前位置&lt;/li&gt;
&lt;li&gt;Aggregate (聚合) 定义创建相应迭代器对象的接口&lt;/li&gt;
&lt;li&gt;ConcreteAggregate (具体聚合) 实现创建相应迭代器的接口，该操作返回 ConcreteIterator 的一个适当的实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Iterator 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>解释器模式</title>
        <link>https://blog.yexca.net/archives/126/</link>
        <pubDate>Mon, 09 Oct 2023 17:31:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/126/</guid>
        <description>&lt;p&gt;Interpreter Pattern 类行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2021/%e8%a7%a3%e9%87%8a%e5%99%a8%e6%a8%a1%e5%bc%8f.67y5fd2xby40.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;解释器模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AbstractExpression 声明一个程序的解释操作，这个接口为抽象语法树中所有的结点所共享&lt;/li&gt;
&lt;li&gt;TerminalExpression 实现与文法中的终结符相关联的解释操作；一个句子中的每个终结符需要该类的一个实例&lt;/li&gt;
&lt;li&gt;NonterminalExpression 对文法中的每一条规则都需要一个 NonterminalExpression 类；为每个符号都维护一个 AbstractExpression 类型的实例变量；为文法中的非终结符实现解释 (Interpret) 操作&lt;/li&gt;
&lt;li&gt;Context 包含解释器之外的一些全局信息&lt;/li&gt;
&lt;li&gt;Client 构建 (或被给定) 表示该文法定义的语言中一个特定的句子的抽象语法树，该抽象语法树由 NonterminalExpression 和 TerminalExpression 的实例装配而成；调用解释操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Interpreter 模式适用于当有一个语言需要解释执行，并且可将该语言中的句子表示为一个抽象语法树时，以下情况效果最好：&lt;/p&gt;</description>
        </item>
        <item>
        <title>命令模式</title>
        <link>https://blog.yexca.net/archives/125/</link>
        <pubDate>Sun, 10 Sep 2023 15:26:55 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/125/</guid>
        <description>&lt;p&gt;Command Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e5%91%bd%e4%bb%a4%e6%a8%a1%e5%bc%8f.5urjyaqm2mo0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;命令模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Command 声明执行操作的接口&lt;/li&gt;
&lt;li&gt;ConcreteCommand 将一个接收者对象绑定于一个动作；调用接收者相应的操作，以实现 Execute&lt;/li&gt;
&lt;li&gt;Client 创建一个具体命令对象并设定它的接收者&lt;/li&gt;
&lt;li&gt;Invoker 要求该命令执行这个请求&lt;/li&gt;
&lt;li&gt;Receiver 知道如何实施与执行一个请求相关的操作。任何类都可能作为一个接收者&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Command 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>责任链模式</title>
        <link>https://blog.yexca.net/archives/124/</link>
        <pubDate>Sat, 09 Sep 2023 07:02:55 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/124/</guid>
        <description>&lt;p&gt;Chain of Responsibility Pattern 对象行为型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止&lt;/p&gt;</description>
        </item>
        <item>
        <title>代理模式</title>
        <link>https://blog.yexca.net/archives/123/</link>
        <pubDate>Fri, 08 Sep 2023 12:15:26 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/123/</guid>
        <description>&lt;p&gt;Proxy Pattern 对象结构型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;为其他对象提供一种代理以控制对这个对象的访问&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f.1lw7cilzkxds.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;代理模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Proxy 保存一个引用使得代理可以访问实体；提供一个与 Subject 的接口相同的接口，使代理可以用来代替实体；控制对实体的存取，并可能负责创建和删除它&lt;/li&gt;
&lt;li&gt;Subject 定义 RealSubject 和 Proxy 的共用接口，这样就在任何使用 RealSubject 的地方都可以使用 Proxy&lt;/li&gt;
&lt;li&gt;RealSubject 定义 Proxy 所代表的实体&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Proxy 模式适用于在需要比较通用和复杂的对象指针代替简单的指针的时候，常见的情况有：&lt;/p&gt;</description>
        </item>
        <item>
        <title>享元模式</title>
        <link>https://blog.yexca.net/archives/122/</link>
        <pubDate>Thu, 07 Sep 2023 13:54:55 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/122/</guid>
        <description>&lt;p&gt;Flyweight Pattern 对象结构型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;运用共享技术有效地支持大量细粒度的对象&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e4%ba%ab%e5%85%83%e6%a8%a1%e5%bc%8f.7jg2ravau7o0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;享元模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Flyweight 描述一个接口，通过这个接口 Flyweight 可以接受并作用于外部状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ConcreteFlyweight 实现 Flyweight 接口，并为内部状态 (如果有) 增加存储空间。ConcreteFlyweight 对象必项是可共享的。它所存储的状态必须是内部的，即它必须独立于 ConcreteFlyweight 对象的场景&lt;/p&gt;</description>
        </item>
        <item>
        <title>外观模式</title>
        <link>https://blog.yexca.net/archives/121/</link>
        <pubDate>Wed, 06 Sep 2023 03:02:02 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/121/</guid>
        <description>&lt;p&gt;Facade Pattern 对象结构型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;为子系统中的一组接口提供一个一致的界面，Facade 模式定义了一个高层接口，这个接口使得这一子系统更加容易使用&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e5%a4%96%e8%a7%82%e6%a8%a1%e5%bc%8f.6awzfhe505c0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;外观模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Facade 知道哪些子系统类负责处理请求；将客户的请求代理给适当的子系统对象&lt;/li&gt;
&lt;li&gt;Subsystem classes 实现子系统的功能；处理有 Facade 对象指派的任务；没有 Facade 的任何相关信息，即没有指向 Facade 的指针&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Facade 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>装饰器模式</title>
        <link>https://blog.yexca.net/archives/120/</link>
        <pubDate>Tue, 05 Sep 2023 21:45:45 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/120/</guid>
        <description>&lt;p&gt;Decorator Pattern 对象结构型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;动态地给一个对象添加一些额外的职责。就增加功能而言，Decorator 模式比生成子类更加灵活&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e8%a3%85%e9%a5%b0%e5%99%a8.2xwcg7gcu640.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;装饰器&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Component 定义一个对象接口，可以给这些对象动态地添加职责&lt;/li&gt;
&lt;li&gt;ConcreteComponent 定义一个对象，可以给这个对象添加一些职责&lt;/li&gt;
&lt;li&gt;Decorator 维持一个指向 Component 对象的指针，并定义一个与 Component 接口一致的接口&lt;/li&gt;
&lt;li&gt;ConcreteDecorator 向组件添加职责&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Decorator 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>组合模式</title>
        <link>https://blog.yexca.net/archives/119/</link>
        <pubDate>Sun, 03 Sep 2023 15:44:45 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/119/</guid>
        <description>&lt;p&gt;Composite Pattern 对象结构型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;将对象组合成树型结构以表示 &amp;ldquo;部分 - 整体&amp;rdquo; 的层次结构。Composite 使得用户对单个对象和组合对象的使用具有一致性&lt;/p&gt;</description>
        </item>
        <item>
        <title>桥接模式</title>
        <link>https://blog.yexca.net/archives/118/</link>
        <pubDate>Sat, 02 Sep 2023 17:34:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/118/</guid>
        <description>&lt;p&gt;Bridge Pattern 对象结构型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;将抽象部分与其实现部分分离，使它们都可以独立地变化&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e6%a1%a5%e6%8e%a5%e6%a8%a1%e5%bc%8f.63qf1btnav80.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;桥接模式&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Abstraction 定义抽象类的接口，维护一个指向 Implementor 类型对象的指针&lt;/li&gt;
&lt;li&gt;RefinedAbstraction 扩充由 Abstraction 定义的接口&lt;/li&gt;
&lt;li&gt;Implementor 定义实现类的接口，该接口不一定要与 Abstraction 的接口完全一致；事实上这两个接口可以完全不同
一般来说，Implementor 接口仅提供基本操作，而 Abstraction 定义了基于这些基本操作的较高层次的操作&lt;/li&gt;
&lt;li&gt;ConcreteImplementor 实现 Implementor 接口并定义它的具体实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Bridge 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>适配器模式</title>
        <link>https://blog.yexca.net/archives/117/</link>
        <pubDate>Fri, 01 Sep 2023 15:03:03 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/117/</guid>
        <description>&lt;p&gt;Adapter Pattern 类结构型模式/对象结构型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;将一个类的接口转换成客户希望的另外一个接口。Adapter 模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作&lt;/p&gt;</description>
        </item>
        <item>
        <title>使用 CNAME 将域名重定向到带路径的 URL</title>
        <link>https://blog.yexca.net/archives/116/</link>
        <pubDate>Mon, 28 Aug 2023 15:31:01 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/116/</guid>
        <description>&lt;p&gt;之前拥有服务器的时候虽然有过此想法，但毕竟只要服务器再开个站点就解决了并没有深入研究，如今服务器到期将 Blog 搬到 Github 上想要继续这样无疑是不可能的，于是便寻求解决方法&lt;/p&gt;</description>
        </item>
        <item>
        <title>单例模式</title>
        <link>https://blog.yexca.net/archives/115/</link>
        <pubDate>Wed, 05 Jul 2023 13:58:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/115/</guid>
        <description>&lt;p&gt;Singleton Pattern 对象创建型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;保证一个类仅有一个实例，并提供一个访问它的全局访问点&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f.47bqfvzklxk0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Singleton 指定一个 Instance 操作，允许客户访问它的唯一实例&lt;/li&gt;
&lt;li&gt;Instance 是一个类操作；可能负责创建它自己的唯一实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Singleton 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>アイドルマスター ミリオンライブ！的 IP 规则</title>
        <link>https://blog.yexca.net/archives/114/</link>
        <pubDate>Fri, 09 Jun 2023 23:32:09 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/114/</guid>
        <description>&lt;p&gt;最近游玩 ミリシタ 时连接不上，遂寻找解决方法 &lt;!-- raw HTML omitted --&gt;（顺便试试 Spotify 的嵌入效果&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;域名&#34;&gt;域名
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;theaterdays.appspot.com
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;草、ミリシタの文章で何を書いたか、どっちもミリシタと関係ないもん！&lt;/p&gt;</description>
        </item>
        <item>
        <title>原型模式</title>
        <link>https://blog.yexca.net/archives/113/</link>
        <pubDate>Fri, 02 Jun 2023 19:31:44 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/113/</guid>
        <description>&lt;p&gt;Prototype Pattern 对象创建型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;用原型实例指定创建对象的种类，并且通过复制这些原型创建新的对象&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/image_hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e5%8e%9f%e5%9e%8b%e6%a8%a1%e5%bc%8f.550t72mfloo0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prototype 声明一个复制自身的接口&lt;/li&gt;
&lt;li&gt;ConcretePrototype 实现一个复制自身的操作&lt;/li&gt;
&lt;li&gt;Client 让一个原型复制自身从而创建一个新的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Prototype 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>生成器模式</title>
        <link>https://blog.yexca.net/archives/112/</link>
        <pubDate>Thu, 01 Jun 2023 23:33:17 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/112/</guid>
        <description>&lt;p&gt;Builder Pattern 对象创建型模式&lt;/p&gt;
&lt;h2 id=&#34;意图&#34;&gt;意图
&lt;/h2&gt;&lt;p&gt;将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示&lt;/p&gt;
&lt;h2 id=&#34;结构&#34;&gt;结构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2023/03-%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/%e7%94%9f%e6%88%90%e5%99%a8%e6%a8%a1%e5%bc%8f.52btnuzz5780.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Builder 为创建一个 Product 对象的各个部件指定抽象接口&lt;/li&gt;
&lt;li&gt;ConcreteBuilder 实现 Builder 的接口以构造和装配该产品的各个部件，定义并明确它所创建的表示，提供一个检索产品的接口&lt;/li&gt;
&lt;li&gt;Director 构造一个使用 Builder 接口的对象&lt;/li&gt;
&lt;li&gt;Product 表示被构建的复杂对象。ConcreteBuilder 创建该产品的内部表示并定义它的装配过程。包含定义组成组件的类，包括将这些组件装配成最终产品的接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用性&#34;&gt;适用性
&lt;/h2&gt;&lt;p&gt;Builder 模式适用于：&lt;/p&gt;</description>
        </item>
        <item>
        <title>工厂模式</title>
        <link>https://blog.yexca.net/archives/111/</link>
        <pubDate>Sun, 28 May 2023 10:23:46 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/111/</guid>
        <description>&lt;h2 id=&#34;简单工厂模式&#34;&gt;简单工厂模式
&lt;/h2&gt;&lt;p&gt;简单工厂模式属于创建型模式，但&lt;strong&gt;不属于&lt;/strong&gt; 23 种设计模式之一&lt;/p&gt;
&lt;p&gt;定义：定义一个工厂类，它可以根据参数的不同返回不同类的实例，被创建的实例通常都具有共同的父类&lt;/p&gt;</description>
        </item>
        <item>
        <title>算法 钢条切割问题 (动态规划 分治)</title>
        <link>https://blog.yexca.net/archives/110/</link>
        <pubDate>Sat, 27 May 2023 19:37:08 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/110/</guid>
        <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述
&lt;/h2&gt;&lt;p&gt;某公司购买长钢条，将其切割后进行出售。切割钢条的成本可以忽略不计，钢条的长度为英寸。已知价格表 $p$ ，其中 $p_{i}(i=1,2,\cdots,m)$ 表示长度为 $i$ 英寸的钢条的价格。现要求解使销售收益最大的切割方案&lt;/p&gt;</description>
        </item>
        <item>
        <title>算法 假币问题 (分治)</title>
        <link>https://blog.yexca.net/archives/109/</link>
        <pubDate>Thu, 18 May 2023 20:17:35 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/109/</guid>
        <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述
&lt;/h2&gt;&lt;p&gt;有 $n$ 枚硬币，其中有一枚是假币，已知假币的重量较轻。现只有一个天平，要求用尽量少的比较次数找出这枚假币&lt;/p&gt;
&lt;h2 id=&#34;问题分析&#34;&gt;问题分析
&lt;/h2&gt;&lt;p&gt;将 $n$ 枚硬币分成相等的两部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当 $n$ 为偶数时，将前后两部分，即 $1\cdots\frac{n}{2}$ 和 $\frac{n}{2}+1\cdots n$ 放在天平的两端，较轻的一端里有假币，继续在较轻的这部分硬币中用同样的方法找出假币&lt;/li&gt;
&lt;li&gt;当 $n$ 为奇数时，将前后两部分，即 $1\cdots\frac{n-1}{2}$ 和 $\frac{n+1}{2}+1\cdots n$ 放在天平的两端，较轻的一端里有假币，继续在较轻的这部分硬币中用同样的方法找出假币；若两端重量相等，则中间的硬币，即第 $\frac{n+1}{2}$ 枚硬币是假币&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;c-代码&#34;&gt;C 代码
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// coins:重量数组   first,last:数组第一个与最后一个下标
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCounterfeitCoin&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;coins, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; first, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; last);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; coins[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCounterfeitCoin&lt;/span&gt;(coins, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;第 %d 个是假币&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,tmp&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCounterfeitCoin&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;coins, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; first, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; last){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; firstSum&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; lastSum&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 只剩两枚硬币
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(first &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; last &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(coins[first] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; coins[last])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; first;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; last;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 偶数枚硬币
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;first; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            firstSum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; coins[i];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;last&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            lastSum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; coins[i];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(firstSum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; lastSum){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCounterfeitCoin&lt;/span&gt;(coins, first, first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCounterfeitCoin&lt;/span&gt;(coins, first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, last);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{  &lt;span style=&#34;color:#75715e&#34;&gt;// 奇数枚硬币
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;first; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            firstSum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; coins[i];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;last&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            lastSum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; coins[i];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(firstSum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; lastSum){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCounterfeitCoin&lt;/span&gt;(coins, first, first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(firstSum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; lastSum){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCounterfeitCoin&lt;/span&gt;(coins, first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, last);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; first&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(last&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;first)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>设计模式 引</title>
        <link>https://blog.yexca.net/archives/108/</link>
        <pubDate>Wed, 17 May 2023 22:50:20 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/108/</guid>
        <description>&lt;p&gt;&amp;ldquo;每一个设计模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心。这样，你就能一次又一次地使用该方案而不必做重复劳动&amp;rdquo;。设计模式的核心在于提供了相关问题的解决方案，使得人们可以简单方便地复用成功的设计和体系结构&lt;/p&gt;</description>
        </item>
        <item>
        <title>Honkai: Star Rail 国际服分流规则</title>
        <link>https://blog.yexca.net/archives/107/</link>
        <pubDate>Tue, 16 May 2023 23:13:21 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/107/</guid>
        <description>&lt;p&gt;针对中国大陆无法进入游戏分流规则&lt;/p&gt;
&lt;h2 id=&#34;key&#34;&gt;Key
&lt;/h2&gt;&lt;p&gt;在进入游戏时需要 udp 连接，而多数协议不支持 udp，即遇到 udp 会自动拒绝，所以将 udp 连接的 IP 设置为直连即可，下面是我抓取到的两个 IP&lt;/p&gt;</description>
        </item>
        <item>
        <title>算法 电路布线问题 (动态规划)</title>
        <link>https://blog.yexca.net/archives/106/</link>
        <pubDate>Tue, 16 May 2023 17:53:31 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/106/</guid>
        <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述
&lt;/h2&gt;&lt;p&gt;在一块电路板的上下两端分别有 n 个接线柱。根据电路设计，用 $(i, \pi(i))$ 表示将上端接线柱 i 与下端接线柱 $\pi(i)$ 相连，称其为该电路板上的第 i 条连线&lt;/p&gt;
&lt;p&gt;下图所示的 $\pi(i)$ 排列为 ${8, 7, 4, 2, 5, 1, 9, 3, 10, 6}$ 对于任何 $1 \le i &amp;lt; j \le n $ ，第 i 条连线和第 j 条连线相交的充要条件是 $\pi(i)&amp;gt;\pi(j)$&lt;/p&gt;</description>
        </item>
        <item>
        <title>搭建个人音乐网站</title>
        <link>https://blog.yexca.net/archives/105/</link>
        <pubDate>Tue, 02 May 2023 02:27:39 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/105/</guid>
        <description>&lt;p&gt;使用 Rclone 挂载 Onedrive 歌曲文件，Navidrome 搭建网站，采用 docker 部署&lt;/p&gt;
&lt;h2 id=&#34;rclone&#34;&gt;Rclone
&lt;/h2&gt;&lt;p&gt;首先需要在 Windows 系统上运行获取配置，然后再在服务器上安装并挂载文件&lt;/p&gt;
&lt;h3 id=&#34;获取-token&#34;&gt;获取 Token
&lt;/h3&gt;&lt;p&gt;在 Windows 电脑上下载 Rclone，下载地址：

&lt;a class=&#34;link&#34; href=&#34;https://rclone.org/downloads/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://rclone.org/downloads/
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>UML 中的图</title>
        <link>https://blog.yexca.net/archives/104/</link>
        <pubDate>Thu, 13 Apr 2023 20:02:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/104/</guid>
        <description>&lt;p&gt;图 (Diagram) 是一组元素的图形表示，大多数情况下把图画成顶点 (代表事物) 和弧 (代表关系) 的连通图。为了对系统进行可视化，可以从不同的角度画图，这样图是对系统的投影&lt;/p&gt;</description>
        </item>
        <item>
        <title>UML</title>
        <link>https://blog.yexca.net/archives/103/</link>
        <pubDate>Tue, 11 Apr 2023 08:01:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/103/</guid>
        <description>&lt;p&gt;面向对象分析强调的是对一个系统中对象的特征和行为的定义。目前，国际上已经出现了多种面向对象的方法。业界普遍接受的为 UML (Unified Modeling Language, 统一建模语言)&lt;/p&gt;
&lt;p&gt;统一建模语言是面向对象软件的标准化建模语言。由于其简单、统一，又能够表达软件设计中的动态和静态信息，目前已经成为可视化建模语言事实上的工业标准&lt;/p&gt;</description>
        </item>
        <item>
        <title>服务器用 Docker 部署记录</title>
        <link>https://blog.yexca.net/archives/102/</link>
        <pubDate>Tue, 04 Apr 2023 22:31:45 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/102/</guid>
        <description>&lt;p&gt;从想法产生到彻底实现，一共耗时三个月 &lt;del&gt;(主要是太懒了)&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装-docker&#34;&gt;安装 Docker
&lt;/h2&gt;&lt;p&gt;使用了 APT 进行安装&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加 HTTPS 传输的软件包以及 CA 证书&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 先更新一下&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 然后安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     apt-transport-https &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     ca-certificates &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     gnupg &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     lsb-release
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 国内源&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 官方源&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;向 &lt;em&gt;sources.list&lt;/em&gt; 中添加 Docker 软件源&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;首先需要确定 Debian 的版本号，然后替换下面命令的 &lt;code&gt;$(lsb_release -cs)&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>软件工程-软件质量与软件工具</title>
        <link>https://blog.yexca.net/archives/101/</link>
        <pubDate>Mon, 03 Apr 2023 19:59:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/101/</guid>
        <description>&lt;p&gt;软件工程系列文章六&lt;/p&gt;
&lt;p&gt;软件质量是指反映软件系统或软件产品满足规定或隐含需求的能力的特征和特性全体&lt;/p&gt;
&lt;p&gt;软件质量管理是指对软件开发过程进行独立的检查活动，由质量保证、质量规划和质量控制 3 个主要活动构成&lt;/p&gt;</description>
        </item>
        <item>
        <title>软件工程-软件项目管理</title>
        <link>https://blog.yexca.net/archives/100/</link>
        <pubDate>Sun, 02 Apr 2023 06:58:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/100/</guid>
        <description>&lt;p&gt;软件工程系列文章五&lt;/p&gt;
&lt;p&gt;软件项目的成功率非常低的原因可能就是项目管理能力太弱。由于软件本身的特殊性及复杂性，将项目管理思想引入软件工程领域，就形成了软件项目管理&lt;/p&gt;</description>
        </item>
        <item>
        <title>软件工程-系统维护概述</title>
        <link>https://blog.yexca.net/archives/99/</link>
        <pubDate>Fri, 31 Mar 2023 07:57:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/99/</guid>
        <description>&lt;p&gt;软件工程系列文章四&lt;/p&gt;
&lt;p&gt;软件维护是软件生命周期的最后一个阶段，处于系统投入生产性运行之后的时期中，因此不属于系统开发过程。软件维护是在软件已经交付使用之后为了改正错误或满足新的需求而修改软件的过程，即软件在交付使用后对软件所做的一切改动&lt;/p&gt;</description>
        </item>
        <item>
        <title>软件工程-系统测试</title>
        <link>https://blog.yexca.net/archives/98/</link>
        <pubDate>Wed, 29 Mar 2023 19:56:57 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/98/</guid>
        <description>&lt;p&gt;软件工程系列文章三&lt;/p&gt;
&lt;h2 id=&#34;系统测试的意义目的及原则&#34;&gt;系统测试的意义、目的及原则
&lt;/h2&gt;&lt;p&gt;系统测试是为了发现错误而执行程序的过程，成功的测试是发现了至今尚未发现的错误的测试&lt;/p&gt;
&lt;p&gt;测试的目的就是希望能以最少的人力和时间发现潜在的各种错误和缺陷。用户应根据开发各阶段的需求、设计等文档或程序的内部结构精心设计测试用例，并利用这些实例来运行程序，以便发现错误的过程&lt;/p&gt;</description>
        </item>
        <item>
        <title>软件工程-需求分析与系统设计</title>
        <link>https://blog.yexca.net/archives/97/</link>
        <pubDate>Wed, 29 Mar 2023 17:04:45 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/97/</guid>
        <description>&lt;p&gt;软件工程系列文章二&lt;/p&gt;
&lt;h2 id=&#34;软件生存周期&#34;&gt;软件生存周期
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;可行性分析与项目开发计划&lt;/li&gt;
&lt;li&gt;需求分析&lt;/li&gt;
&lt;li&gt;概要设计&lt;/li&gt;
&lt;li&gt;详细设计&lt;/li&gt;
&lt;li&gt;编码&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;维护&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;软件需求&#34;&gt;软件需求
&lt;/h2&gt;&lt;p&gt;在进行需求获取之前，首先要明确需要获取什么，也就是需求包含哪些内容。软件需求是指用户对目标软件系统在功能、行为、性能、设计约束等方面的期望&lt;/p&gt;</description>
        </item>
        <item>
        <title>软件工程-软件过程与软件过程模型</title>
        <link>https://blog.yexca.net/archives/96/</link>
        <pubDate>Tue, 28 Mar 2023 15:45:47 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/96/</guid>
        <description>&lt;p&gt;软件工程系列文章一&lt;/p&gt;
&lt;h2 id=&#34;软件过程&#34;&gt;软件过程
&lt;/h2&gt;&lt;p&gt;软件开发的中所遵循的线路图称为 &amp;ldquo;软件过程&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;能力成熟度模型-cmm&#34;&gt;能力成熟度模型 (CMM)
&lt;/h3&gt;&lt;p&gt;CMM 将软件过程改进分为以下 5 个成熟度级别&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始级 (Initial)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	软件的特点是杂乱无章，有时甚至很混乱，几乎没有明确定义的步骤，项目的完成完全依赖个人的努力和英雄式核心人物的作用&lt;/p&gt;</description>
        </item>
        <item>
        <title>Git 学习</title>
        <link>https://blog.yexca.net/archives/95/</link>
        <pubDate>Sun, 05 Mar 2023 15:03:43 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/95/</guid>
        <description>&lt;p&gt;整理一下自己学的 Git 相关的内容吧&lt;/p&gt;
&lt;h2 id=&#34;一安装&#34;&gt;一、安装
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在 Windows 上安装 Git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 Git 官网下载安装：

&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/download/win&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://git-scm.com/download/win
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;安装完成后运行一次 &lt;em&gt;Git Bash&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Linux 上安装 Git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Debian：&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fedora：&lt;code&gt;dnf install git&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库记录已下载画师作品</title>
        <link>https://blog.yexca.net/archives/94/</link>
        <pubDate>Thu, 02 Mar 2023 10:16:38 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/94/</guid>
        <description>&lt;p&gt;秉持着 &amp;ldquo;不在自己硬盘的东西就不是自己的&amp;rdquo; 的原则，以及个人手机中日益增多的图片迫切需要整理放入硬盘中保存，以缓解手机内存危机，于是决定采取分画师下载储存。于是便需要一个方便记录，快速查询修改的方法，原来使用 Markdown 的清单，可随着画师增多，查询不免变得很慢&lt;/p&gt;</description>
        </item>
        <item>
        <title>面向对象基础</title>
        <link>https://blog.yexca.net/archives/93/</link>
        <pubDate>Sat, 25 Feb 2023 19:34:30 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/93/</guid>
        <description>&lt;p&gt;面向对象 (Object-Oriented, OO) 是一种非常实用的系统化软件开发方法&lt;/p&gt;
&lt;h2 id=&#34;面向过程和面向对象&#34;&gt;面向过程和面向对象
&lt;/h2&gt;&lt;p&gt;以一个问题引入：把大象装进冰箱，需要几步？&lt;/p&gt;
&lt;p&gt;一般先打开冰箱，然后把大象装进冰箱，最后关上冰箱&lt;/p&gt;
&lt;h3 id=&#34;面向过程&#34;&gt;面向过程：
&lt;/h3&gt;&lt;p&gt;关心我该怎么做？一步步去实现这个功能&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库学习七 数据库的控制功能</title>
        <link>https://blog.yexca.net/archives/92/</link>
        <pubDate>Sun, 12 Feb 2023 08:15:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/92/</guid>
        <description>&lt;h2 id=&#34;事务管理&#34;&gt;事务管理
&lt;/h2&gt;&lt;p&gt;事务是一个操作序列，这些操作 &amp;ldquo;要么都做，要么都不做&amp;rdquo;&lt;/p&gt;
&lt;p&gt;事务和程序是两个不同的概念，一般一个程序可包含多个事务&lt;/p&gt;
&lt;p&gt;在 SQL 语言中，事务定义的语句有以下三条&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库学习六 数据库设计</title>
        <link>https://blog.yexca.net/archives/91/</link>
        <pubDate>Sat, 11 Feb 2023 08:15:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/91/</guid>
        <description>&lt;h2 id=&#34;数据库设计的策略&#34;&gt;数据库设计的策略
&lt;/h2&gt;&lt;p&gt;自顶向下与自底向上，常常两种方法综合使用&lt;/p&gt;
&lt;h2 id=&#34;数据库设计的步骤&#34;&gt;数据库设计的步骤
&lt;/h2&gt;&lt;p&gt;新奥尔良法是目前得到公认的，较完整、较权威的数据库设计方法，它把数据库设计分为四个主要阶段&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户需求分析。收集用户需求，确定系统边界&lt;/li&gt;
&lt;li&gt;概念设计。描述概念模型较理想的是采用 E-R 方法&lt;/li&gt;
&lt;li&gt;逻辑设计。E-R 图转换为关系模式，规范化&lt;/li&gt;
&lt;li&gt;物理设计。逻辑模型在计算机中的具体实现方案&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后进行数据库实施阶段与数据库运行、维护阶段&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库学习五 范式</title>
        <link>https://blog.yexca.net/archives/90/</link>
        <pubDate>Fri, 10 Feb 2023 08:13:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/90/</guid>
        <description>&lt;p&gt;关系数据库中的关系必须满足一定的规范化要求，对于不同的规范化程度可以使用范式来衡量。目前主要有 6 钟范式：1NF、2NF、3NF、BCNF、4NF 和 5NF&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库学习四 关系数据库理论</title>
        <link>https://blog.yexca.net/archives/89/</link>
        <pubDate>Thu, 09 Feb 2023 08:10:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/89/</guid>
        <description>&lt;h2 id=&#34;关系模式&#34;&gt;关系模式
&lt;/h2&gt;&lt;p&gt;一个关系模式应当是一个五元组 (含关系名)&lt;/p&gt;
&lt;p&gt;R&amp;lt;U, D, dom, F&amp;gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;R 为关系名，它是符号化的元组语义&lt;/li&gt;
&lt;li&gt;U 为一组属性&lt;/li&gt;
&lt;li&gt;属性组 U 中的属性来自域 D&lt;/li&gt;
&lt;li&gt;dom 为属性列表到域的映射&lt;/li&gt;
&lt;li&gt;F 为属性组 U 上的一组数据依赖 (函数依赖)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于第三点与第四点对模式设计关系不大，因此通常把关系模式看作是一个三元组：R&amp;lt;U, F&amp;gt;，当且仅当 U 上的一个关系 r 满足 f 时，r 称为关系模式 R&amp;lt;U, F&amp;gt; 的一个关系&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库学习三 SQL 语言</title>
        <link>https://blog.yexca.net/archives/88/</link>
        <pubDate>Wed, 08 Feb 2023 08:00:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/88/</guid>
        <description>&lt;h2 id=&#34;sql-语言的分类&#34;&gt;SQL 语言的分类
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;DDL (Data Definition Language, 数据定义语言)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在数据库系统中，每一个数据库、数据库中的表、视图和索引等都是数据库的对象，要建立和删除一个数据库对象，都可以通过 SQL 语言来完成。DDL 包括 &lt;code&gt;CREATE&lt;/code&gt;、&lt;code&gt;ALTER&lt;/code&gt; 和 &lt;code&gt;DROP&lt;/code&gt; 等&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库学习二 关系模型</title>
        <link>https://blog.yexca.net/archives/87/</link>
        <pubDate>Tue, 07 Feb 2023 06:00:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/87/</guid>
        <description>&lt;h2 id=&#34;关系模型中的基本术语&#34;&gt;关系模型中的基本术语
&lt;/h2&gt;&lt;p&gt;关系数据库系统是支持关系模型的数据库系统。有关关系模型的的一些基本术语如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系：一个关系就是一张二维表，每个关系有一个关系名&lt;/li&gt;
&lt;li&gt;元组：表中的一行即为一个元组，对应存储文件中的一个记录值&lt;/li&gt;
&lt;li&gt;属性：表中的列称为属性，每一列有一个属性名，属性值相当于记录中的数据项或者字段值&lt;/li&gt;
&lt;li&gt;域：属性的取值范围，即不同元组对同一个属性的值所限定的范围&lt;/li&gt;
&lt;li&gt;关系模式：对关系的描述称为关系模式，由关系名和其属性集合构成，关系模式的格式为：&lt;code&gt;关系名(属性名 1，···，属性名 n)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常一个关系模式对应一个关系文件的结果&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据库学习一 数据库导论</title>
        <link>https://blog.yexca.net/archives/86/</link>
        <pubDate>Mon, 06 Feb 2023 19:57:35 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/86/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;之前数据库的写的很不好看，重新复习编写一下 (虽然这个也挺乱就是了)&lt;/p&gt;
&lt;h2 id=&#34;数据库的四个基本概念&#34;&gt;数据库的四个基本概念
&lt;/h2&gt;&lt;h3 id=&#34;数据&#34;&gt;数据
&lt;/h3&gt;&lt;p&gt;描述事物的符号记录&lt;/p&gt;
&lt;h3 id=&#34;数据库&#34;&gt;数据库
&lt;/h3&gt;&lt;p&gt;概括地讲，数据库数据具有永久存储、有组织和可共享的三个基本特点&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第十二章 管理磁盘和文件系统</title>
        <link>https://blog.yexca.net/archives/85/</link>
        <pubDate>Tue, 03 Jan 2023 13:37:48 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/85/</guid>
        <description>&lt;h2 id=&#34;第十二章-管理磁盘和文件系统&#34;&gt;第十二章 管理磁盘和文件系统
&lt;/h2&gt;&lt;h3 id=&#34;121-了解磁盘存储器&#34;&gt;12.1 了解磁盘存储器
&lt;/h3&gt;&lt;p&gt;在大多数现代操作系统中，数据存储器的基本工作原理都是相同的。磁盘用作永久存储器，而 RAM (Random Access Memory，随机存储器) 和交换区则用作临时存储器。例如，当运行一条命令时，该命令将从硬盘复制到 RAM，以便计算机处理器 (CPU) 可以更快地访问该命令&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第十一章 获取用户账户</title>
        <link>https://blog.yexca.net/archives/84/</link>
        <pubDate>Mon, 02 Jan 2023 12:29:03 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/84/</guid>
        <description>&lt;h2 id=&#34;第十一章-获取用户账户&#34;&gt;第十一章 获取用户账户
&lt;/h2&gt;&lt;p&gt;用户账户保持了使用系统的人与运行在系统中的进程之间的边界，而组是一种将系统的权限一次性分配给多个用户的方法&lt;/p&gt;
&lt;h3 id=&#34;111-创建用户账户&#34;&gt;11.1 创建用户账户
&lt;/h3&gt;&lt;p&gt;每一个使用 Linux 系统的人都应该有一个单独的用户账户。通过拥有一个用户账户，可以提供用来完全存储文件的区域，以及调整用户界面 (GUI、路径、环境变量等) ，从而适合用户使用电脑的习惯&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第十章 获取和管理软件</title>
        <link>https://blog.yexca.net/archives/83/</link>
        <pubDate>Thu, 08 Dec 2022 16:35:57 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/83/</guid>
        <description>&lt;h2 id=&#34;第十章-获取和管理软件&#34;&gt;第十章 获取和管理软件
&lt;/h2&gt;&lt;h3 id=&#34;101-在桌面管理软件&#34;&gt;10.1 在桌面管理软件
&lt;/h3&gt;&lt;p&gt;通过软件与 GUI 管理&lt;/p&gt;
&lt;h3 id=&#34;102-超越-software-窗口&#34;&gt;10.2 超越 Software 窗口
&lt;/h3&gt;&lt;p&gt;Software 中能检索到的软件有限&lt;/p&gt;
&lt;h3 id=&#34;103-了解-linux-rpm-和-deb-软件包&#34;&gt;10.3 了解 Linux RPM 和 DEB 软件包
&lt;/h3&gt;&lt;p&gt;软件包称为 tarball (压缩包)，包含可执行文件 (命令)、文档、配置文件以及库&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第八、九章 学习系统管理与安装 Linux</title>
        <link>https://blog.yexca.net/archives/82/</link>
        <pubDate>Wed, 07 Dec 2022 16:29:05 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/82/</guid>
        <description>&lt;h2 id=&#34;第八章-学习系统管理&#34;&gt;第八章 学习系统管理
&lt;/h2&gt;&lt;h3 id=&#34;81-理解系统管理&#34;&gt;8.1 理解系统管理
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;su 命令 &amp;mdash; 以 root 用户身份打开一个 shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sudo 命令 &amp;mdash; 普通用户通过此命令运行其他命令时，该才会被赋予 root 权限&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;82-使用图形化管理工具&#34;&gt;8.2 使用图形化管理工具
&lt;/h3&gt;&lt;p&gt;Cockpit 是基于浏览器的系统管理工具&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第七章 编写简单的 shell 脚本</title>
        <link>https://blog.yexca.net/archives/81/</link>
        <pubDate>Mon, 05 Dec 2022 20:47:43 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/81/</guid>
        <description>&lt;h2 id=&#34;第七章-编写简单的-shell-脚本&#34;&gt;第七章 编写简单的 shell 脚本
&lt;/h2&gt;&lt;p&gt;如果需要反复执行某一任务，而该任务又需要输入大量的命令行，那么可以通过写入 shell 脚本以实现一条命令完成所有任务&lt;/p&gt;
&lt;h3 id=&#34;71-理解-shell-脚本&#34;&gt;7.1 理解 shell 脚本
&lt;/h3&gt;&lt;p&gt;shell 脚本是一组包含命令、函数、变量或其他可以通过 shell 使用的功能。这些项目被输入一个纯文本文件中，而该文件可以作为一条命令来运行&lt;/p&gt;</description>
        </item>
        <item>
        <title>欧姆社漫画数字电路读后</title>
        <link>https://blog.yexca.net/archives/80/</link>
        <pubDate>Sun, 04 Dec 2022 16:54:29 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/80/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;最近？看了《漫画数字电路》一书，大概记录一下&lt;/p&gt;
&lt;p&gt;书上的很多东西并没有记录在此处&lt;/p&gt;
&lt;h2 id=&#34;前述&#34;&gt;前述
&lt;/h2&gt;&lt;p&gt;数字电路分 组合电路 与 时序电路&lt;/p&gt;
&lt;p&gt;组合电路：现在输入信息的组合决定输出的电路&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第六章 管理运行中的进程</title>
        <link>https://blog.yexca.net/archives/79/</link>
        <pubDate>Sat, 03 Dec 2022 15:07:03 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/79/</guid>
        <description>&lt;h2 id=&#34;第六章-管理运行中的进程&#34;&gt;第六章 管理运行中的进程
&lt;/h2&gt;&lt;p&gt;Linux 是一种多用户的操作系统，也是一种多任务系统。多任务意味着可以同时运行多个程序，运行程序的实例通常被称为进程&lt;/p&gt;
&lt;p&gt;可通过 shell 启动、暂停、停止或杀死进程，还可将进程放到后台以及带到前台&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第五章 使用文本文件</title>
        <link>https://blog.yexca.net/archives/78/</link>
        <pubDate>Sat, 19 Nov 2022 21:07:03 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/78/</guid>
        <description>&lt;h2 id=&#34;第五章-使用文本文件&#34;&gt;第五章 使用文本文件
&lt;/h2&gt;&lt;p&gt;Linux 的大多数配置通过编辑纯文本文件完成。无论是修改 /etc 目录的文件配置本地服务，还是编辑 Ansible 目录文件配置主机的集合，纯文本文件仍然在这些任务中普遍使用&lt;/p&gt;</description>
        </item>
        <item>
        <title>NovelAI 绘图 (WebUI)</title>
        <link>https://blog.yexca.net/archives/77/</link>
        <pubDate>Sun, 30 Oct 2022 16:23:07 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/77/</guid>
        <description>&lt;p&gt;使用 Windows11 部署，其他系统 (如 Linux ) 请参考：

&lt;a class=&#34;link&#34; href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui#automatic-installation-on-linux&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;空间占用&#34;&gt;空间占用
&lt;/h2&gt;&lt;p&gt;程序：5.3GiB (不含模型)&lt;/p&gt;
&lt;p&gt;运行：5.5GiB 以上&lt;/p&gt;
&lt;p&gt;请确保 C 盘空间至少 6GiB 再运行，否则电脑可能黑屏卡死&lt;/p&gt;</description>
        </item>
        <item>
        <title>虚拟机中 Arch Linux 安装记录</title>
        <link>https://blog.yexca.net/archives/76/</link>
        <pubDate>Sun, 02 Oct 2022 13:39:26 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/76/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;使用虚拟机安装，软件为 Fedora 的 &lt;em&gt;盒子&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装前准备&#34;&gt;安装前准备
&lt;/h2&gt;&lt;h3 id=&#34;下载镜像&#34;&gt;下载镜像
&lt;/h3&gt;&lt;p&gt;从

&lt;a class=&#34;link&#34; href=&#34;https://archlinux.org/download/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
官方下载页面
&lt;/a&gt;
 下载，推荐使用 BT 下载 (请使用正规 torrent 客户端，例如 

&lt;a class=&#34;link&#34; href=&#34;https://www.qbittorrent.org/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
qBittorrent
&lt;/a&gt;
 )&lt;/p&gt;
&lt;p&gt;然后放到虚拟机里&lt;/p&gt;
&lt;h3 id=&#34;验证引导模式&#34;&gt;验证引导模式
&lt;/h3&gt;&lt;p&gt;列出 efivars 目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /sys/firmware/efi/efivars
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果正确显示目录并且没有报告错误，则系统以 UEFI 模式引导，如果目录不存在，则可能以 

&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/BIOS&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
BIOS
&lt;/a&gt;
  模式引导 (或 CSM 模式)&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第四章 在文件系统中移动</title>
        <link>https://blog.yexca.net/archives/75/</link>
        <pubDate>Sun, 25 Sep 2022 20:35:02 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/75/</guid>
        <description>&lt;h2 id=&#34;第四章-在文件系统中移动&#34;&gt;第四章 在文件系统中移动
&lt;/h2&gt;&lt;p&gt;Linux 文件系统存储了计算机上所有的信息&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;目录&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;/bin&lt;/td&gt;
          &lt;td&gt;包含常见的 Linux 用户命令，比如 ls、sort、date 和 chmod&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/boot&lt;/td&gt;
          &lt;td&gt;包含可启动的 Linux 内核、最初的 RAM 盘和启动加载程序的配置文件 (GRUB)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/dev&lt;/td&gt;
          &lt;td&gt;包含用来表示系统中设备访问点的文件。这些设备包括终端设备 (tty*) 、硬盘驱动器 (hd* 或 sd*) 、RAM (ram*) 以及 CD-ROM (cd*) 。用户可以直接通过这些设备文件访问相应的设备；然而，应用程序通常会对最终用户隐藏实际的设备名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/etc&lt;/td&gt;
          &lt;td&gt;包含管理配置文件。其中大多数文件都是纯文本文件，只要用户拥有适当的权限，就可以使用任何文本编辑器编辑这些配置文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/home&lt;/td&gt;
          &lt;td&gt;包含分配给每个带有登录账号的普通用户的目录 (root 用户是一个例外，使用 /root 作为主目录)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/media&lt;/td&gt;
          &lt;td&gt;为自动挂载设备 (特别是可移动介质) 提供了一个标准位置。如果介质有一个卷名，那么一般来说使用该卷名作为挂载点&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/lib&lt;/td&gt;
          &lt;td&gt;包含 /bin 和 /sbin 目录中的应用程序启动系统所需的共享库&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/mnt&lt;/td&gt;
          &lt;td&gt;在该目录被标准的 /media 目录取代之前，/mnt 目录是许多设备常见的挂载点。一些可启动的 Linux 系统仍使用该目录来挂载硬盘分区和远程文件系统。此外很多人也在使用该目录临时挂载那些不需要永久挂载的本地或远程文件系统&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/misc&lt;/td&gt;
          &lt;td&gt;该目录有时用来根据请求自动挂载文件系统&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/opt&lt;/td&gt;
          &lt;td&gt;用来存储附加应用程序软件的目录结构&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/proc&lt;/td&gt;
          &lt;td&gt;包含关于系统资源的信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/root&lt;/td&gt;
          &lt;td&gt;表示 root 用户的主目录。因安全原因，没有位于 /home&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/sbin&lt;/td&gt;
          &lt;td&gt;包含管理命令和守护进程&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/sys&lt;/td&gt;
          &lt;td&gt;包含用于调优块存储和管理 cgroups 的参数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/tmp&lt;/td&gt;
          &lt;td&gt;包含应用程序使用的临时文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/usr&lt;/td&gt;
          &lt;td&gt;包含用户文档、游戏、图形文件 (X11) 、库 (lib) 以及其他不需要在启动过程中使用的命令和文件。/usr 目录中的文件在安装完毕就不可更改。理论上来讲，/usr 可以采用只读方式挂载&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/var&lt;/td&gt;
          &lt;td&gt;包含不同应用程序所使用的数据目录。尤其可以在该目录中放置作为 FTP 服务器 (/var/ftp) 或 Web 服务器 (/var/www) 共享的文件。还包含所有的系统日至文件 (/var/log) 以及假脱机文件 (/var/spool，如 mail、cups 和 news) 。/var 目录所包含的目录和文件经常被修改。在服务器计算机上，通常会创建一个 /var 目录作为一个单独的文本系统，使用一个易于拓展的文件系统&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;41-使用基本的文件系统命令&#34;&gt;4.1 使用基本的文件系统命令
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; 、&lt;code&gt;pwd&lt;/code&gt; 、&lt;code&gt;mkdir&lt;/code&gt; 、&lt;code&gt;rmdir&lt;/code&gt; 、&lt;code&gt;ls&lt;/code&gt; 、&lt;code&gt;touch&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Fedora 桌面折腾</title>
        <link>https://blog.yexca.net/archives/74/</link>
        <pubDate>Sun, 18 Sep 2022 11:10:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/74/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;应该是最近的最后一次折腾了，不过启用很多插件后开机后要很久才显示桌面，之后要禁用一些不常用的&lt;/p&gt;
&lt;h2 id=&#34;主题&#34;&gt;主题
&lt;/h2&gt;&lt;p&gt;通过

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/129&#34; 

&gt;
阅读书籍
&lt;/a&gt;
 得知 

&lt;a class=&#34;link&#34; href=&#34;https://www.gnome-look.org/s/Gnome/browse/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
GNOME 的主题网站
&lt;/a&gt;
 ，然后去逛了下，打开第一个主题就深深吸引了我&lt;/p&gt;</description>
        </item>
        <item>
        <title>个人内网折腾</title>
        <link>https://blog.yexca.net/archives/73/</link>
        <pubDate>Fri, 16 Sep 2022 15:00:01 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/73/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;人嘛，有了比较好的就会追求更好的，欲望无穷无尽。本想整 NAS，奈何经济实力不够，于是通过四个项目在自己电脑整了入口、动画、漫画以及音声库，那么&lt;/p&gt;</description>
        </item>
        <item>
        <title>WordPress 数据库禁用插件</title>
        <link>https://blog.yexca.net/archives/72/</link>
        <pubDate>Thu, 15 Sep 2022 22:17:02 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/72/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;启用某插件后台 502 了&lt;/p&gt;
&lt;h2 id=&#34;进入数据库&#34;&gt;进入数据库
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择进入 wp_options 表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到 active_plugins 条目，一般在第二页&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编辑此项目的 option_value 行&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;删除不要的插件&#34;&gt;删除不要的插件
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;注意：删除前先备份！！！&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;找到不需要的插件的名字&lt;/p&gt;
&lt;p&gt;删除从 &lt;code&gt;i&lt;/code&gt; 开始到 &lt;code&gt;;&lt;/code&gt;，例如 &lt;code&gt;i:1;s:23:&amp;quot;elementor/elementor.php&amp;quot;;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改序号，也就是 &lt;code&gt;i,&lt;/code&gt; 后的数字&lt;/p&gt;</description>
        </item>
        <item>
        <title>Fedora 安装 Komga 折腾记录</title>
        <link>https://blog.yexca.net/archives/71/</link>
        <pubDate>Wed, 14 Sep 2022 18:47:16 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/71/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;为了在内网更方便得看漫画&lt;/p&gt;
&lt;h2 id=&#34;ip-设置&#34;&gt;IP 设置
&lt;/h2&gt;&lt;p&gt;路由器为 OpenWRT 系统&lt;/p&gt;
&lt;h3 id=&#34;路由器设置&#34;&gt;路由器设置
&lt;/h3&gt;&lt;p&gt;在 &lt;em&gt;网络- IP/MAC 绑定&lt;/em&gt; 将电脑绑定一个固定的 IP&lt;/p&gt;
&lt;h3 id=&#34;fedora-设置&#34;&gt;Fedora 设置
&lt;/h3&gt;&lt;p&gt;因为我设置的 IP 与自动分配的不一致 (有线连接) ，固需要手动修改&lt;/p&gt;</description>
        </item>
        <item>
        <title>SSH 公钥登录</title>
        <link>https://blog.yexca.net/archives/70/</link>
        <pubDate>Mon, 12 Sep 2022 19:24:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/70/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;每次连接机子都要输入密码属实有点麻烦 &lt;del&gt;(因为我忘了&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;oneclick&#34;&gt;OneClick
&lt;/h2&gt;&lt;p&gt;如果自己的电脑没有公钥需要先生成，一般在 &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在自己的电脑上运行下个命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-copy-id username@RemoteIP
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;username&lt;/code&gt; 替换为要登录的账户，&lt;code&gt;RemoteIP&lt;/code&gt; 替换为要登录的 IP 地址&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 学习 第三章 使用 shell</title>
        <link>https://blog.yexca.net/archives/69/</link>
        <pubDate>Mon, 12 Sep 2022 15:04:10 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/69/</guid>
        <description>&lt;h2 id=&#34;第三章-使用-shell&#34;&gt;第三章 使用 shell
&lt;/h2&gt;&lt;p&gt;本章介绍的 Linux shell 称为 Bash shell，其全称为 Bourne Again shell。还有其他的 shell，例如在 BSD UNIX 用户中流行的 C shell (csh) ，以及在 UNIX System V 用户中非常流行的 Korn shel (ksh) ，Ubuntu 默认启动 Dash shell (速度比 Bash快) ，还有 Tcsh shell (一种改进的 C shell) 和 Ash shell (与 Bourne shell 非常相似)&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 下载 youtube 视频</title>
        <link>https://blog.yexca.net/archives/68/</link>
        <pubDate>Sat, 10 Sep 2022 19:29:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/68/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;既然都有Win命令行了，那怎么能没有Linux呢&lt;/p&gt;
&lt;p&gt;Windows的文章：

&lt;a class=&#34;link&#34; href=&#34;http://blog.yexca.net/archives/52&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
命令行下载YouTube视频
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;下载yt-dlp&#34;&gt;下载yt-dlp
&lt;/h2&gt;&lt;p&gt;建议配置好Python环境，然后到

&lt;a class=&#34;link&#34; href=&#34;https://github.com/yt-dlp/yt-dlp/releases&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Releases · yt-dlp/yt-dlp · GitHub
&lt;/a&gt;
 下载&lt;em&gt;yt-dlp&lt;/em&gt;，如果不想配置Python就下载&lt;em&gt;yt-dlp_linux&lt;/em&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>萌百黑幕在 Argon 主题 WordPress 实现</title>
        <link>https://blog.yexca.net/archives/67/</link>
        <pubDate>Mon, 05 Sep 2022 21:51:23 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/67/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;这个黑幕很好玩啊，非常好玩啊，&lt;!-- raw HTML omitted --&gt;可惜首页无法渲染出来&lt;!-- raw HTML omitted --&gt;，而且 Markdown 编写渲染也难&lt;/p&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用
&lt;/h2&gt;&lt;p&gt;编写文章时选择&lt;em&gt;作为HTML编辑&lt;/em&gt;，插入以下语句&lt;/p&gt;</description>
        </item>
        <item>
        <title>记录 OpenWRT 通过深澜网络认证折腾</title>
        <link>https://blog.yexca.net/archives/66/</link>
        <pubDate>Mon, 05 Sep 2022 21:24:23 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/66/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;记录我使用OpenWRT路由器连接学校网的折腾过程，虽然最后的结果挺 emm？但在这个过程中还是了解到不少东西&lt;/p&gt;
&lt;h2 id=&#34;起始&#34;&gt;起始
&lt;/h2&gt;&lt;p&gt;通过在浏览器搜索&lt;em&gt;openwrt通过深澜认证&lt;/em&gt;得到

&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4054114-1-1.html&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
恩山无线论坛
&lt;/a&gt;
 帖子回复下的一个开源项目：

&lt;a class=&#34;link&#34; href=&#34;https://github.com/coffeehat/BIT-srun-login-script&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
coffeehat/BIT-srun-login-script
&lt;/a&gt;
 ，通过项目知道了有支持多平台（包括openwrt）的golang版本，于是开始折腾&lt;/p&gt;</description>
        </item>
        <item>
        <title>ffmpeg 批量转换视频格式</title>
        <link>https://blog.yexca.net/archives/65/</link>
        <pubDate>Mon, 05 Sep 2022 16:41:38 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/65/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;因为接触了

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/52&#34; 

&gt;
YouTube-dl
&lt;/a&gt;
 ，下载频道的所有内容非常好用，但是下载下来是webm格式兼容性不是太好，于是查看了使用ffmpeg转换格式的命令&lt;/p&gt;
&lt;h2 id=&#34;配置文件&#34;&gt;配置文件
&lt;/h2&gt;&lt;p&gt;后来发现改下配置文件就行，在文件后加上&lt;/p&gt;</description>
        </item>
        <item>
        <title>HTTP 学习</title>
        <link>https://blog.yexca.net/archives/64/</link>
        <pubDate>Mon, 05 Sep 2022 16:03:36 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/64/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;这是在我阅读了肖佳老师的书《HTTP抓包实战》后对HTTP相关内容的总结，主要还是报文相关(记录：阅读此书与写出此文章耗时5天)&lt;/p&gt;
&lt;h2 id=&#34;http协议报文的结构&#34;&gt;HTTP协议报文的结构
&lt;/h2&gt;&lt;p&gt;HTTP报文分2个：一个是HTTP请求报文，一个是HTTP响应报文&lt;/p&gt;</description>
        </item>
        <item>
        <title>Fedora 安装 java8(Oracle JDK)</title>
        <link>https://blog.yexca.net/archives/63/</link>
        <pubDate>Fri, 02 Sep 2022 17:37:51 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/63/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;尽管 Fedora 系统自带 java 环境，不过是 OpenJDK 。有时候还是需要使用 Oracle 的&lt;/p&gt;
&lt;h2 id=&#34;下载&#34;&gt;下载
&lt;/h2&gt;&lt;p&gt;进入官网下载：

&lt;a class=&#34;link&#34; href=&#34;https://www.oracle.com/java/technologies/downloads/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Java Downloads | Oracle
&lt;/a&gt;
  (下载需要登陆)&lt;/p&gt;
&lt;p&gt;找到 &lt;em&gt;java8-Linux&lt;/em&gt; ，下载 &lt;em&gt;x64 Compressed Archive&lt;/em&gt; (64位的压缩包版本)&lt;/p&gt;
&lt;p&gt;本文章写时文件名为 &lt;em&gt;jdk-8u341-linux-x64.tar.gz&lt;/em&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Aria2&#43;AriaNG 配置使用</title>
        <link>https://blog.yexca.net/archives/62/</link>
        <pubDate>Thu, 01 Sep 2022 23:06:38 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/62/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;p&gt;其文章: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/2022/09/01/906d191f9a59/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://blog.hiyoung.xyz/2022/09/01/906d191f9a59/
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Aria2是Linux下的一个下载工具,这里介绍Windows下的安装与配置,官方Aria2没有GUI界面所以配合AriaNG直接在Web界面进行操作.&lt;/p&gt;</description>
        </item>
        <item>
        <title>Fiddler 抓包 HTTPS</title>
        <link>https://blog.yexca.net/archives/61/</link>
        <pubDate>Thu, 01 Sep 2022 08:17:32 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/61/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;默认情况下Fiddler仅抓包HTTP，需要设置后才能捕获HTTPS。现在大部分网站都是使用HTTPS或者HSTS，所以开启HTTPS抓包是很必要的&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 下 bin 目录</title>
        <link>https://blog.yexca.net/archives/60/</link>
        <pubDate>Wed, 31 Aug 2022 00:27:09 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/60/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;事实上命令文件放在哪都可自行决定，也就是自己想放哪就放哪，这些目录不过是约定，不过遵守约定会更好啦，毕竟没有人会想要自己的电脑一团糟吧，尤其是Linux&lt;/p&gt;</description>
        </item>
        <item>
        <title>Fedora安装后</title>
        <link>https://blog.yexca.net/archives/59/</link>
        <pubDate>Wed, 24 Aug 2022 12:13:30 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/59/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;个人安装Fedora后装的一些东西&lt;/p&gt;
&lt;h2 id=&#34;修改终端快捷键&#34;&gt;修改终端快捷键
&lt;/h2&gt;&lt;p&gt;打开&lt;em&gt;设置-键盘&lt;/em&gt;，在最下方&lt;em&gt;查看及自定义快捷键&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;自定义快捷键&lt;/p&gt;
&lt;p&gt;名称：Shell终端&lt;/p&gt;
&lt;p&gt;命令：gnome-terminal&lt;/p&gt;
&lt;p&gt;快捷键：自定&lt;/p&gt;</description>
        </item>
        <item>
        <title>Github 拒绝访问 Connection refused</title>
        <link>https://blog.yexca.net/archives/58/</link>
        <pubDate>Mon, 15 Aug 2022 02:44:47 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/58/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;今日使用Git推送提示&lt;code&gt;fatal: unable to access &#39;https://github.com/yexca-VRChat/yexca-VRChat.github.io.git/&#39;: Failed to connect to 127.0.0.1 port 1081 after 2074 ms: Connection refused&lt;/code&gt;，重启电脑也没用，遂寻找解决方法~~（为什么不让爷访问自己的仓库）~~&lt;/p&gt;</description>
        </item>
        <item>
        <title>搭建 Git 服务端及同步到指定目录</title>
        <link>https://blog.yexca.net/archives/57/</link>
        <pubDate>Sat, 13 Aug 2022 10:28:50 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/57/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;使用Git可以更好的和朋友一起管理代码，也便于同步代码。由于我比较喜欢静态网站，因此使用Git同步网页文件很是实用&lt;/p&gt;
&lt;h2 id=&#34;安装git&#34;&gt;安装Git
&lt;/h2&gt;&lt;p&gt;登录ROOT账户，依次输入以下命令&lt;/p&gt;</description>
        </item>
        <item>
        <title>博客视频外链引用</title>
        <link>https://blog.yexca.net/archives/56/</link>
        <pubDate>Fri, 12 Aug 2022 00:11:17 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/56/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;p&gt;其文章: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/2022/08/11/607cac6fe835/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://blog.hiyoung.xyz/2022/08/11/607cac6fe835/
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在主流流媒体网站都支持外链嵌入代码，但是B站(&lt;del&gt;什么时候倒闭?&lt;/del&gt;)现在(2022/8/11)自带的外链引用默认为360P，且不能调节清晰度，非常的恶心，与Youtube相比高下立判，下面重点介绍一下B站的引用外链的参数和方法&lt;/p&gt;</description>
        </item>
        <item>
        <title>RSS</title>
        <link>https://blog.yexca.net/archives/55/</link>
        <pubDate>Tue, 09 Aug 2022 16:08:14 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/55/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;最早接触RSS还是逛神社的时候，但当我知道有这么个东西的时候RSS就几乎凋零，不过还有类似于RSSHub之类的还在继续为之奋斗，不过RSSHub时常因网络问题无法连接，慢慢的放弃了。随着发现的博客越来越多，为了能够及时获取更新以及记录自己阅读过以及未阅读的文章，我再次使用RSS&lt;/p&gt;</description>
        </item>
        <item>
        <title>记录 Grey Hack 第一个任务(获取密码)</title>
        <link>https://blog.yexca.net/archives/54/</link>
        <pubDate>Wed, 03 Aug 2022 22:41:06 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/54/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;昨日游玩接取第一个任务的记录，由于是复述，部分细节可能与实际情况不同&lt;/p&gt;
&lt;h2 id=&#34;接取任务&#34;&gt;接取任务
&lt;/h2&gt;&lt;p&gt;在通过某神秘人的考验后获得&lt;code&gt;HackShop&lt;/code&gt;的网站，接到第一个任务&lt;/p&gt;
&lt;p&gt;任务内容为&amp;quot;The client wants the login credentials of the user &lt;strong&gt;Daronane&lt;/strong&gt;. The remote ip of the victim is &lt;strong&gt;54.44.37.52&lt;/strong&gt;. It&amp;rsquo;s important that you access the correct machine behind the public ip. The victim&amp;rsquo;s ip LAN is 172.16.6.7&amp;quot;&lt;/p&gt;</description>
        </item>
        <item>
        <title>使用 Git 上传文件至 Github</title>
        <link>https://blog.yexca.net/archives/53/</link>
        <pubDate>Wed, 03 Aug 2022 12:49:27 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/53/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;p&gt;其文章: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/2022/08/03/0b5e2db181ab/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://blog.hiyoung.xyz/2022/08/03/0b5e2db181ab/
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近经常要使用Github保存我学习过程中的代码，发现无法直接上传文件夹，遂在网上查了一下使用Git上传，所以写个博文记录一下&lt;/p&gt;</description>
        </item>
        <item>
        <title>命令行下载 YouTube 视频</title>
        <link>https://blog.yexca.net/archives/52/</link>
        <pubDate>Mon, 25 Jul 2022 12:52:27 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/52/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;哪个男孩不想使用命令行运行一些东西装逼呢。之前有所了解youtube-dl，但看着过于复杂没去使用，今日尝试使用发现甚是好用啊！&lt;/p&gt;
&lt;h2 id=&#34;环境&#34;&gt;环境
&lt;/h2&gt;&lt;h3 id=&#34;安装python37&#34;&gt;安装Python3.7+
&lt;/h3&gt;&lt;p&gt;直接到

&lt;a class=&#34;link&#34; href=&#34;https://www.python.org/downloads/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Python官网
&lt;/a&gt;
 下载安装即可，安装时勾选&lt;code&gt;Add Python x.x to PATH&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>VS Code 更换字体</title>
        <link>https://blog.yexca.net/archives/51/</link>
        <pubDate>Wed, 13 Jul 2022 17:47:57 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/51/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;近日网上冲浪时发现一觉得还不错的字体，便寻找更换字体方法。&lt;del&gt;但实际使用下来没那么惊艳&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;方式一&#34;&gt;方式一
&lt;/h2&gt;&lt;p&gt;左下&lt;code&gt;管理&lt;/code&gt;-&lt;code&gt;设置&lt;/code&gt;(或者快捷键&lt;code&gt;CTRL+,&lt;/code&gt;)进入设置界面，找到&lt;code&gt;Editor:Font Family&lt;/code&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows 网络地址( FTP 地址)取消快速访问</title>
        <link>https://blog.yexca.net/archives/50/</link>
        <pubDate>Mon, 27 Jun 2022 13:31:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/50/</guid>
        <description>&lt;p&gt;好像并没有解决方法，不过可以把快速访问中自己添加的全删除(恢复默认)&lt;/p&gt;
&lt;p&gt;定位至“C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Recent\AutomaticDestinations”，将此文件夹目录下的文件进行备份后全部删除&lt;/p&gt;</description>
        </item>
        <item>
        <title>OpenWRT中继WIFI</title>
        <link>https://blog.yexca.net/archives/49/</link>
        <pubDate>Thu, 23 Jun 2022 14:50:21 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/49/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;今日尝试了一下之前试过的无线中继，发现已经不会了，果然做一项东西还是要写个文章记录一下比较好啊&lt;/p&gt;
&lt;p&gt;本文中，将OpenWRT路由器连接的WIFI称为上级路由，OpenWRT路由器称为路由器&lt;/p&gt;</description>
        </item>
        <item>
        <title>使用 PS 自动化脚本批量处理图片</title>
        <link>https://blog.yexca.net/archives/48/</link>
        <pubDate>Fri, 10 Jun 2022 00:54:44 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/48/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;p&gt;其文章: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/2022/08/18/5be9517606f2/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://blog.hiyoung.xyz/2022/08/18/5be9517606f2/
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;使用ps自动化脚本批量处理图片&#34;&gt;使用PS自动化脚本批量处理图片
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;点击菜单栏的 窗口-&amp;gt;动作（快捷键alt+F9)&lt;/li&gt;
&lt;li&gt;再选项卡底部点击新建文件夹（新建组），取名为修改图片大小（可以自己重命名）&lt;/li&gt;
&lt;li&gt;再点击旁边的创建新动作，我们可以看到底部原点变为红色&lt;br&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/hiyoung3937/img_hiyoung/master/bolg/blog_%E4%BD%BF%E7%94%A8PS%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87_1.5x0zewo4yzc0.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;blog_使用PS自动化脚本批量处理图片_1&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;点击文件、打开&lt;/strong&gt;，打开我们要处理的其中一张图片，修改图片大小，再点击确定，&lt;strong&gt;然后另存为，取个名字，存储&lt;/strong&gt;。（不要使用导出，否则无法录入动作导致陷入死循环）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;点击文件、自动、批处理&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;设置
&lt;ol&gt;
&lt;li&gt;播放处选择组和动作&lt;/li&gt;
&lt;li&gt;源 选择需要修改的图片文件地址&lt;/li&gt;
&lt;li&gt;目标 选择修改后的图片保存地址&lt;/li&gt;
&lt;li&gt;勾选 &lt;strong&gt;“覆盖动作中的’打开’命令”&lt;/strong&gt; 和 &lt;strong&gt;“覆盖动作中的‘存储为’命令”&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/hiyoung3937/img_hiyoung/master/bolg/blog_%E4%BD%BF%E7%94%A8PS%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87_2.2bh4ygmfs3i8.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;blog_使用PS自动化脚本批量处理图片_2&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;内容部分参考自互联网&lt;/p&gt;</description>
        </item>
        <item>
        <title>原神自动签到 (Linux 服务器 Docker)</title>
        <link>https://blog.yexca.net/archives/47/</link>
        <pubDate>Thu, 09 Jun 2022 13:33:42 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/47/</guid>
        <description>&lt;h1 id=&#34;引言&#34;&gt;引言
&lt;/h1&gt;&lt;p&gt;由于腾讯云函数从六月开始收费，于是便弃用改在自己的服务器上搭建&lt;/p&gt;
&lt;p&gt;既然六月收费为什么现在才写文章呢？因为&lt;del&gt;可能还有三个月的免费试用&lt;/del&gt;我米游社的Cookie过期更换，故记录&lt;/p&gt;</description>
        </item>
        <item>
        <title>VS Code 实时预览 Markdown</title>
        <link>https://blog.yexca.net/archives/46/</link>
        <pubDate>Thu, 09 Jun 2022 00:03:34 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/46/</guid>
        <description>&lt;h1 id=&#34;引言&#34;&gt;引言
&lt;/h1&gt;&lt;p&gt;在学习

&lt;a class=&#34;link&#34; href=&#34;https://yexca.xyz/index.php/2022/05/28/markdown%e7%ae%80%e6%98%93%e5%85%a5%e9%97%a8%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Markdown用法
&lt;/a&gt;
 后，感觉非常好用(&lt;del&gt;最近的文章都是使用Markdown写的&lt;/del&gt;)，又因为编程或

&lt;a class=&#34;link&#34; href=&#34;https://yexca.xyz/index.php/2022/05/28/github-pages%e5%bb%ba%e7%ab%99%e5%8f%8a%e8%87%aa%e5%ae%9a%e4%b9%89%e5%9f%9f%e5%90%8d/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Github建站
&lt;/a&gt;
 会和Markdown打交道，而我编程使用VS Code(&lt;del&gt;看嘉然&lt;/del&gt;)，遂寻找是否可以实时预览&lt;/p&gt;</description>
        </item>
        <item>
        <title>VS Code 右下角嘉然</title>
        <link>https://blog.yexca.net/archives/45/</link>
        <pubDate>Wed, 01 Jun 2022 06:01:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/45/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;首先我不是嘉心糖，我只是觉得很可爱(&lt;del&gt;我刚开始甚至都不知道是嘉然&lt;/del&gt;)，然后这个Bug挺多，自启动不是每次都能触发，但她太可爱啦&lt;/p&gt;
&lt;p&gt;然后这个拓展还可以改背景，但我个人不是太喜欢就没改&lt;/p&gt;</description>
        </item>
        <item>
        <title>Github Pages建站及自定义域名</title>
        <link>https://blog.yexca.net/archives/44/</link>
        <pubDate>Sat, 28 May 2022 15:30:43 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/44/</guid>
        <description>&lt;h1 id=&#34;引言&#34;&gt;引言
&lt;/h1&gt;&lt;p&gt;最近基于Github Pages整了一个

&lt;a class=&#34;link&#34; href=&#34;https://git.yexca.xyz&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
个人页面
&lt;/a&gt;
 ，记录一下如何使用Github Pages建站以及自定义域名&lt;/p&gt;
&lt;p&gt;本文没有建站系统等，&lt;del&gt;因为我也就写了一个Markdown文件&lt;/del&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Markdown 简述 (学习笔记)</title>
        <link>https://blog.yexca.net/archives/43/</link>
        <pubDate>Sat, 28 May 2022 00:59:23 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/43/</guid>
        <description>&lt;h1 id=&#34;引言&#34;&gt;引言
&lt;/h1&gt;&lt;p&gt;最近因建

&lt;a class=&#34;link&#34; href=&#34;https://pan.vrchat.yexca.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
网盘网站
&lt;/a&gt;
 了解了一下 Markdown，发现这玩意非常好用，于是写一份学习笔记&lt;/p&gt;
&lt;p&gt;可以通过

&lt;a class=&#34;link&#34; href=&#34;https://markdown.com.cn/editor/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
在线编辑器
&lt;/a&gt;
 边看边学，也可下载一些

&lt;a class=&#34;link&#34; href=&#34;https://markdown.com.cn/tools.html&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
编辑器
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;个人编写Markdown的工具为 

&lt;a class=&#34;link&#34; href=&#34;https://www.typora.io/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Typora
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>プロセカ的IP规则</title>
        <link>https://blog.yexca.net/archives/42/</link>
        <pubDate>Thu, 19 May 2022 15:01:25 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/42/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;本人可直连进入游戏，但加速器等不可进入游戏，又因每次进入游戏关闭虚拟私人网路较为麻烦，寻找相应资料却无果，故写此文。(游戏为IOS日服)&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;通过查看日志文件确定了进入游戏时连接的域名&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 添加用户和管理员用户</title>
        <link>https://blog.yexca.net/archives/41/</link>
        <pubDate>Mon, 16 May 2022 15:29:21 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/41/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;添加管理员用户&#34;&gt;&lt;strong&gt;添加管理员用户：&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、新建用户，这里新建一个temp_test的用户&lt;/strong&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;passwd temp_test&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、将sudoers文件的权限修改成可编辑&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;chmod -v u+w /etc/sudoers&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、使用vim编辑sudoers文件&lt;/strong&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Liunx 随手笔记</title>
        <link>https://blog.yexca.net/archives/40/</link>
        <pubDate>Sat, 30 Apr 2022 04:24:07 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/40/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Linux不会自动创建不存在的文件夹,使用”mv”命令时需要注意文件夹是否存在,否则会将文件重命名。&lt;/li&gt;
&lt;li&gt;为文件创建硬链接实际上是为文件创建了额外的名字部分(数据部分未改动),类似于C语言中创建了一个指针指向该文件。&lt;/li&gt;
&lt;li&gt;为文件创建符号链接类似于WIN中的快捷方式,在使用”ls -li”命令中可以比较直观的看出区别。硬链接字节数和源文件一样，而符号链接字节数不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hiyoung3937/img_hiyoung@master/bolg/Liunx%e9%9a%8f%e6%89%8b%e7%ac%94%e8%ae%b0_1.5y3s10ifdko0.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>在虚拟机中设置静态 IP（centos 为例）</title>
        <link>https://blog.yexca.net/archives/39/</link>
        <pubDate>Fri, 22 Apr 2022 18:13:42 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/39/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;p&gt;其文章: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/2022/09/03/3256bd2afccc/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://blog.hiyoung.xyz/2022/09/03/3256bd2afccc/
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;一虚拟机设置&#34;&gt;一、虚拟机设置
&lt;/h2&gt;&lt;p&gt;在菜单栏选择编辑→ 虚拟网络编辑器，打开虚拟网络编辑器对话框，选择Net网络连接方式，随意设置子网IP，点击NAT设置页面，查看子网掩码和网关，后面修改静态IP会用到。&lt;/p&gt;</description>
        </item>
        <item>
        <title>系统学习 Linux 笔记</title>
        <link>https://blog.yexca.net/archives/38/</link>
        <pubDate>Tue, 19 Apr 2022 02:53:27 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/38/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;p&gt;其文章: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/2022/08/01/84a03702e5a9/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://blog.hiyoung.xyz/2022/08/01/84a03702e5a9/
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;（参考视频：

&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1WY4y1H7d3?p=1&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://www.bilibili.com/video/BV1WY4y1H7d3?p=1
&lt;/a&gt;
 ）&lt;/p&gt;
&lt;h2 id=&#34;一基础篇&#34;&gt;一、基础篇
&lt;/h2&gt;&lt;h3 id=&#34;11-linux文件系统目录结构&#34;&gt;1.1 Linux文件系统目录结构
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://www.runoob.com/wp-content/uploads/2014/06/d0c50-linux2bfile2bsystem2bhierarchy.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Linux文件系统目录结构&#34;
	
	
&gt;


&lt;a class=&#34;link&#34; href=&#34;https://www.runoob.com/linux/linux-system-contents.html&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
来源：菜鸟教程
&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;图中小箭头表示该文件实际位置在别处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;/bin：&lt;/strong&gt;
bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/boot：&lt;/strong&gt;&lt;br&gt;
这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/dev ：&lt;/strong&gt;&lt;br&gt;
dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/etc：&lt;/strong&gt;&lt;br&gt;
etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/home&lt;/strong&gt;：&lt;br&gt;
用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/lib&lt;/strong&gt;：&lt;br&gt;
lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/lost+found&lt;/strong&gt;：&lt;br&gt;
这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/media&lt;/strong&gt;：&lt;br&gt;
linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/mnt&lt;/strong&gt;：&lt;br&gt;
系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/opt&lt;/strong&gt;：&lt;br&gt;
opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/proc&lt;/strong&gt;：&lt;br&gt;
proc 是 Processes(进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。&lt;br&gt;
这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：echo 1 &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_all&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/root&lt;/strong&gt;：&lt;br&gt;
该目录为系统管理员，也称作超级权限者的用户主目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/sbin&lt;/strong&gt;：&lt;br&gt;
s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/selinux&lt;/strong&gt;：&lt;br&gt;
这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/srv&lt;/strong&gt;：&lt;br&gt;
该目录存放一些服务启动之后需要提取的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/sys&lt;/strong&gt;：这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/tmp&lt;/strong&gt;：&lt;br&gt;
tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/usr&lt;/strong&gt;：&lt;br&gt;
usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/usr/bin：&lt;/strong&gt;&lt;br&gt;
系统用户使用的应用程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/usr/sbin：&lt;/strong&gt;&lt;br&gt;
超级用户使用的比较高级的管理程序和系统守护程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/usr/src：&lt;/strong&gt;&lt;br&gt;
内核源代码默认的放置目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/var&lt;/strong&gt;：&lt;br&gt;
var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/run&lt;/strong&gt;：&lt;br&gt;
是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-文件基本属性&#34;&gt;1.2 文件基本属性
&lt;/h3&gt;&lt;h4 id=&#34;121-基本属性&#34;&gt;1.2.1 基本属性
&lt;/h4&gt;&lt;p&gt;在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。&lt;/p&gt;</description>
        </item>
        <item>
        <title>免启动 steam 打开 OBS</title>
        <link>https://blog.yexca.net/archives/37/</link>
        <pubDate>Mon, 11 Apr 2022 22:19:48 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/37/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;2022年03月22日，OBS上架Steam，方便了更新，但每次使用都要打开Steam着实有点麻烦。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;Steam库界面右击“OBS Studio” ，依次选择“管理-浏览本地文件”&lt;/p&gt;</description>
        </item>
        <item>
        <title>查询B站注册时间(精确到秒)</title>
        <link>https://blog.yexca.net/archives/36/</link>
        <pubDate>Sat, 09 Apr 2022 13:47:52 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/36/</guid>
        <description>&lt;h2 id=&#34;一查询时间戳&#34;&gt;一、查询时间戳
&lt;/h2&gt;&lt;p&gt;打开网页

&lt;a class=&#34;link&#34; href=&#34;https://member.bilibili.com/x2/creative/h5/calendar/event?ts=0&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://member.bilibili.com/x2/creative/h5/calendar/event?ts=0
&lt;/a&gt;
 &lt;br&gt;
按下CTRL+F，输入”jointime”，找到jointime后面的数字即为时间戳&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2022/04-B%e7%ab%99%e6%b3%a8%e5%86%8c%e6%97%b6%e9%97%b4/jointime.2nnsmeqoq2a0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;将时间戳复制&lt;/p&gt;
&lt;h2 id=&#34;二转换时间戳&#34;&gt;二、转换时间戳
&lt;/h2&gt;&lt;p&gt;打开网站

&lt;a class=&#34;link&#34; href=&#34;https://tool.lu/timestamp/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
时间戳(Unix timestamp)转换工具 – 在线工具 (tool.lu)
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>使用 PicX 图床上传图片提示“Bad credentials”</title>
        <link>https://blog.yexca.net/archives/35/</link>
        <pubDate>Tue, 22 Mar 2022 16:30:12 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/35/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;今日我写文章时，发现PicX图床无法使用并提示“Bad credentials” ，于是便寻找解决方法&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;其实就是Github的Token到期了，然后在邮箱里会收到一封邮件，名为“[GitHub] Your personal access token has expired”&lt;br&gt;
邮件有三行，第二行“If this token is still needed” ，后面有个链接，点击打开并重新创建即可&lt;/p&gt;</description>
        </item>
        <item>
        <title>VRchat 在中文吧自动弹钢琴</title>
        <link>https://blog.yexca.net/archives/34/</link>
        <pubDate>Tue, 22 Mar 2022 16:11:47 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/34/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;近日通过好友告知VRchat中的钢琴可以自行弹奏，于是便学习了以下，写此篇文章以作记录。&lt;br&gt;
注：好像只可以PC模式下自动弹奏，当然，您也可以在VR下投出桌面试试（doge&lt;/p&gt;</description>
        </item>
        <item>
        <title>图床网站总结</title>
        <link>https://blog.yexca.net/archives/33/</link>
        <pubDate>Sun, 20 Mar 2022 16:54:36 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/33/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;本文章为我自行搜集的一些免费图床，部分图床曾经使用过。当然，如果您想要使用图床，我推荐您阅读

&lt;a class=&#34;link&#34; href=&#34;https://blog.yexca.net/archives/27/&#34; 

&gt;
使用PicX自建免费图床 – yexca’Blog
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows 电脑截屏和录屏</title>
        <link>https://blog.yexca.net/archives/32/</link>
        <pubDate>Sat, 19 Mar 2022 13:57:39 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/32/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;此文章所写方法仅一般用途，如有特殊需求请自行查阅&lt;/p&gt;
&lt;h2 id=&#34;一使用win10win11自带&#34;&gt;一、使用Win10/Win11自带
&lt;/h2&gt;&lt;h3 id=&#34;1系统自带截屏软件&#34;&gt;1）系统自带截屏软件
&lt;/h3&gt;&lt;p&gt;Win10/Win11自带一个截屏软件，名称为“截图工具”，有两种形式使用&lt;/p&gt;
&lt;h4 id=&#34;lt1gt打开软件使用&#34;&gt;&amp;lt;1&amp;gt;打开软件使用
&lt;/h4&gt;&lt;p&gt;通过按下“Win”按键，打开所有应用，找到“截图工具”打开&lt;/p&gt;</description>
        </item>
        <item>
        <title>Beat Saber 添加自定义歌单</title>
        <link>https://blog.yexca.net/archives/31/</link>
        <pubDate>Fri, 18 Mar 2022 17:46:00 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/31/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;近期入正了Beat Saber(虽然是阿区)，于是便想着去添加自定义歌曲，通过steam的评论区得知

&lt;a class=&#34;link&#34; href=&#34;https://bs.wgzeyu.com/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
WGzeyu
&lt;/a&gt;
 大佬做了相关教程，但由于本人目的简单，而教程比较全，特写此文章进行总结&lt;/p&gt;</description>
        </item>
        <item>
        <title>使用 Quest2 VR 玩恋爱活动 (恋活 / koikatu) 遇到的问题及解决</title>
        <link>https://blog.yexca.net/archives/30/</link>
        <pubDate>Fri, 18 Mar 2022 16:54:23 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/30/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;在玩了 Beat Saber 和 VRchat 等 VR 游戏后突然想到 i 社有部分游戏支持 VR，本人最喜欢玩恋活，于是试着进行游玩，但却遇到相关问题，本文仅作记录。另 VR 版无剧情，且本人使用原版所以遇到问题较少。&lt;/p&gt;</description>
        </item>
        <item>
        <title>《图解HTTP》读后总结及浅谈</title>
        <link>https://blog.yexca.net/archives/29/</link>
        <pubDate>Wed, 16 Mar 2022 23:56:48 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/29/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一章了解web及网络基础&#34;&gt;第一章：了解Web及网络基础
&lt;/h2&gt;&lt;h3 id=&#34;11简介&#34;&gt;1.1简介
&lt;/h3&gt;&lt;p&gt;为理解HTTP应事先了解一下TCP/IP协议族，我们通常使用的网络（包括互联网）是在TCP/IP协议族的基础上运作，而HTTP属于它内部的一个子集。在互联网上的设备需要相互通信双方就必须要遵从相同的规则，我们把这些规则称为协议。（TCP/IP是对互联网相关的各类协议族的一个总称包括但不限于：PPPoE、HTTP、TCP、IP、UDP、IEEE 802.3…）&lt;/p&gt;</description>
        </item>
        <item>
        <title>将MMD模型导入 unity</title>
        <link>https://blog.yexca.net/archives/28/</link>
        <pubDate>Thu, 10 Mar 2022 13:15:26 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/28/</guid>
        <description>&lt;h2 id=&#34;注意&#34;&gt;注意
&lt;/h2&gt;&lt;p&gt;此文章复制自

&lt;a class=&#34;link&#34; href=&#34;https://blog.nowcoder.net/n/6edf811b327945fd8143e14a34b0e2f2&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
《unity学习笔记》——将MMD模型导入unity
&lt;/a&gt;
 ，仅用于个人记录使用，部分内容有修改&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;方法1利用unity插件直接读取fbx模型&#34;&gt;方法1：利用unity插件直接读取fbx模型
&lt;/h2&gt;&lt;h3 id=&#34;第一步安装插件-mmd4mecanim-beta&#34;&gt;第一步：安装插件 MMD4Mecanim (Beta)
&lt;/h3&gt;&lt;p&gt;插件地址：

&lt;a class=&#34;link&#34; href=&#34;http://stereoarts.jp/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Stereoarts Homepage
&lt;/a&gt;
 （应插件作者要求请勿上传至GitHub）&lt;br&gt;
文件直链：

&lt;a class=&#34;link&#34; href=&#34;http://stereoarts.jp/MMD4Mecanim_Beta_20200105.zip&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
MMD4Mecanim_Beta_20200105.zip
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>使用 PicX 自建免费图床</title>
        <link>https://blog.yexca.net/archives/27/</link>
        <pubDate>Thu, 17 Feb 2022 23:02:13 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/27/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;在日常发文章时经常会需要插入图片（虽然我最近文章都没图片），但是如果使用自己服务器比较耗流量并且加载速度不是特别快，这就需要使用图床了，但是多数免费图床会有时不时图没了，速度慢等之类的问题，于是开始探索自建图床。&lt;/p&gt;</description>
        </item>
        <item>
        <title>将课程表导入日历（树维教务）</title>
        <link>https://blog.yexca.net/archives/26/</link>
        <pubDate>Wed, 16 Feb 2022 17:53:16 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/26/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;由于学校的教务系统查看课程表不是那么便捷，而且第三方课程表有一定的安全隐患并且广告奇多，于是便想着把课程表导入日历，我选择导入Outlook日历，这样可以实现iOS，Windows和Android多端同步。&lt;/p&gt;</description>
        </item>
        <item>
        <title>查看服务器端口是否开放</title>
        <link>https://blog.yexca.net/archives/25/</link>
        <pubDate>Sun, 13 Feb 2022 19:46:38 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/25/</guid>
        <description>&lt;h2 id=&#34;国内工具&#34;&gt;国内工具
&lt;/h2&gt;&lt;p&gt;使用站长工具的端口扫描，输入IP地址或域名和端口后点击开始扫描&lt;/p&gt;
&lt;p&gt;如果显示关闭，则端口未开放或无法连接&lt;/p&gt;
&lt;p&gt;工具链接：

&lt;a class=&#34;link&#34; href=&#34;http://tool.chinaz.com/port/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
端口扫描 – 站长工具
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;国外工具&#34;&gt;国外工具
&lt;/h2&gt;&lt;p&gt;使用 you get signal 的 Port Forwarding Tester 进行扫描&lt;/p&gt;</description>
        </item>
        <item>
        <title>使用VS Code收发QQ消息</title>
        <link>https://blog.yexca.net/archives/24/</link>
        <pubDate>Fri, 11 Feb 2022 21:47:56 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/24/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;由于QQ软件过于臃肿并且权限过大，并且经常性卡住无法加载，所以便寻找其他方法，首先是通过Telegram收发QQ消息，但配置较为复杂且并不稳定，于是弃用并改用VS Code。&lt;/p&gt;</description>
        </item>
        <item>
        <title>去除Potplayer右下弹窗</title>
        <link>https://blog.yexca.net/archives/23/</link>
        <pubDate>Sun, 06 Feb 2022 21:37:45 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/23/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;Potplayer是非常优秀的视频播放软件，但最近的版本右下开始有弹窗广告非常的让人困扰，本文讲述两种方法解决右下弹窗&lt;/p&gt;
&lt;h2 id=&#34;使用无弹窗的旧版本推荐&#34;&gt;使用无弹窗的旧版本（推荐）
&lt;/h2&gt;&lt;p&gt;最后一个无广告弹窗的版本是1.7.18958&lt;/p&gt;</description>
        </item>
        <item>
        <title>FIR300M 路由器刷固件 OpenWRT</title>
        <link>https://blog.yexca.net/archives/22/</link>
        <pubDate>Sun, 06 Feb 2022 20:44:10 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/22/</guid>
        <description>&lt;h2 id=&#34;引言废话&#34;&gt;引言(废话)
&lt;/h2&gt;&lt;p&gt;闲来无事，于是便想要折腾一下路由器当网关（但事后发现这个路由器空间太小，安装不了多少插件，属实是白忙活了一下午）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;2022.02.17更新&lt;/strong&gt;：不经意间发现了一个自带网关的FIR300M固件，但由于支持的method过于老旧，如需刷取，请注意辨别。&lt;/p&gt;</description>
        </item>
        <item>
        <title>背景</title>
        <link>https://blog.yexca.net/background/</link>
        <pubDate>Mon, 31 Jan 2022 20:40:24 +0800</pubDate>
        
        <guid>https://blog.yexca.net/background/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;因本人技术力过低，本站多次崩溃并重装，此页面将从使用主题 

&lt;a class=&#34;link&#34; href=&#34;https://github.com/solstice23/argon-theme&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Argon
&lt;/a&gt;
  后使用的背景开始记录&lt;/p&gt;
&lt;p&gt;迁移到 Jekyll 后这个主题用背景图片有点麻烦，此帖终结了属于是&lt;/p&gt;
&lt;p&gt;emmm，虽然换了博客系统，但还是没应用场景捏&lt;/p&gt;</description>
        </item>
        <item>
        <title>在Microsoft Word中插入代码（高亮）</title>
        <link>https://blog.yexca.net/archives/21/</link>
        <pubDate>Thu, 20 Jan 2022 14:28:52 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/21/</guid>
        <description>&lt;h2 id=&#34;引言废话&#34;&gt;引言(废话)
&lt;/h2&gt;&lt;p&gt;有些时候会有在Word文档中插入代码的需求，但是直接把代码拷贝过去会不大美观，而且没有高亮看着也非常难受&lt;/p&gt;
&lt;h2 id=&#34;工具一&#34;&gt;工具一
&lt;/h2&gt;&lt;p&gt;

&lt;a class=&#34;link&#34; href=&#34;http://www.codeinword.com/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
CodeInWord 在word中优雅展现的代码/代码高亮/word中插入代码/代码格式化
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>转区软件Locale Emulator</title>
        <link>https://blog.yexca.net/archives/20/</link>
        <pubDate>Fri, 14 Jan 2022 15:53:40 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/20/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;在游玩外区一些小游戏时，常常会由于乱码而不能游玩或者报错无法运行，此时需要转区以匹配正确文字&lt;/p&gt;
&lt;p&gt;虽然可以通过修改Windows的地区设置以运行，但很多时候此方法略显繁琐，并且需要重启电脑，游玩后如果不改回则可能导致正常软件无法使用，此时便需要相关转区软件&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 服务器（网络相关）</title>
        <link>https://blog.yexca.net/archives/19/</link>
        <pubDate>Fri, 14 Jan 2022 01:30:54 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/19/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;背景知识：&lt;/p&gt;
&lt;p&gt;linux时钟概述&lt;br&gt;
linux系统有两个时钟：一个是硬件时钟，即BIOS时间；另一个是系统时钟，是linux系统Kernel（内核）时间。&lt;br&gt;
在linux系统上程序运行时读取的时间都是系统Kernel（内核）时间。&lt;br&gt;
每次Linux启动时，系统Kernel（内核）会先去读取硬件时钟的设置（但是此时的硬件时间不一定是准确的），然后系统时钟就会独立于硬件继续运作。&lt;br&gt;
综上所述，所以想要永久修改linux时间并使得时间准确，就需要永久修改硬件时间，不然每次重新启动linux时，系统时间又变回之前的硬件时间。&lt;br&gt;
linux时钟相关命令&lt;br&gt;
系统Kernel（内核）时钟的相关命令是timedatectl 或者 date；&lt;br&gt;
硬件BIOS时钟相关命令是hwclock 或者 clock。&lt;/p&gt;</description>
        </item>
        <item>
        <title>使用xshell连接虚拟机的centos7系统</title>
        <link>https://blog.yexca.net/archives/18/</link>
        <pubDate>Sun, 26 Dec 2021 15:34:59 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/18/</guid>
        <description>&lt;p&gt;注意：此方法为临时连接，虚拟机重启或关机需要重新配置&lt;/p&gt;
&lt;h2 id=&#34;虚拟机网络适配器设置&#34;&gt;虚拟机网络适配器设置
&lt;/h2&gt;&lt;p&gt;虚拟机的网络适配器一共有三个设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;桥接模式：指使用本机网络网段&lt;/li&gt;
&lt;li&gt;NAT模式：使用VMware Network Adapter VMnet8的网段&lt;/li&gt;
&lt;li&gt;Host-only(仅主机模式)：使用VMware Network Adapter VMnet1的网段&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;查看ip网段&#34;&gt;查看IP网段
&lt;/h2&gt;&lt;p&gt;打开VMware中左上“编辑-虚拟网络编辑器”即可看到VMnet1和VMnet8对应网段地址(子网地址)&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据结构 栈代码</title>
        <link>https://blog.yexca.net/archives/17/</link>
        <pubDate>Sun, 21 Nov 2021 22:19:04 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/17/</guid>
        <description>&lt;h2 id=&#34;顺序栈-数组实现&#34;&gt;顺序栈 (数组实现)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 元素 elem 进栈，a 为数组，top 值为当前栈的栈顶位置
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; a,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; top,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; elem)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a[&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;top]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;elem;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; top;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 数据元素出栈
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; a,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; top)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (top&lt;span style=&#34;color:#f92672&#34;&gt;==-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;空栈&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;弹栈元素：%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,a[top]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; top;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a[&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; top&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(a, top, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(a, top, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(a, top, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(a, top, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt;(a, top);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt;(a, top);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt;(a, top);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt;(a, top);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    top &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt;(a, top);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果：&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据结构 顺序表代码</title>
        <link>https://blog.yexca.net/archives/16/</link>
        <pubDate>Sat, 20 Nov 2021 23:01:47 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/16/</guid>
        <description>&lt;h2 id=&#34;代码&#34;&gt;代码
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt; // malloc()、exit()&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define Size 5  &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 对 Size 进行宏定义，表示顺序表申请空间的大小
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; Table
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; head; &lt;span style=&#34;color:#75715e&#34;&gt;// 声明了一个名为head的长度不确定的数组，也叫“动态数组”
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; length; &lt;span style=&#34;color:#75715e&#34;&gt;// 记录当前顺序表的长度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; size;   &lt;span style=&#34;color:#75715e&#34;&gt;// 记录顺序表分配的存储容量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}table;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 初始化函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;table &lt;span style=&#34;color:#a6e22e&#34;&gt;initTable&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    table t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t.head &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#a6e22e&#34;&gt;malloc&lt;/span&gt;(Size &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;));  &lt;span style=&#34;color:#75715e&#34;&gt;// 构造一个空的顺序表，动态申请存储空间
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;t.head)    &lt;span style=&#34;color:#75715e&#34;&gt;// 如果申请失败，作出提示并直接退出程序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;初始化失败&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t.length &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;   &lt;span style=&#34;color:#75715e&#34;&gt;// 空表的长度初始化为 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    t.size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Size;  &lt;span style=&#34;color:#75715e&#34;&gt;// 空表的初始存储空间为 Size
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 插入函数，其中，elem 为插入的元素，add 为插入到顺序表的位置
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;table &lt;span style=&#34;color:#a6e22e&#34;&gt;addTable&lt;/span&gt;(table t, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; elem, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; add)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 判断插入本身是否存在问题（如果插入元素位置比整张表的长度 +1 还大 (如果相等，是尾随的情况)，或者插入的位置本身不存在，程序作为提示并自动退出)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (add &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; t.length &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; add &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;插入位置有问题&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 做插入操作时，首先需要看顺序表是否有多余的存储空间提供给插入的元素，如果没有，需要申请
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (t.length &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; t.size) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        t.head &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#a6e22e&#34;&gt;realloc&lt;/span&gt;(t.head, (t.size &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;t.head) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;存储分配失败&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        t.size &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 插入操作，需要将从插入位置开始的后续元素，逐个后移
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t.length &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; add &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        t.head[i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t.head[i];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 后移完成后，直接将所需插入元素，添加到顺序表的相应位置
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    t.head[add &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; elem;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 由于添加了元素，所以长度 +1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    t.length&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 删除函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;table &lt;span style=&#34;color:#a6e22e&#34;&gt;delTable&lt;/span&gt;(table t, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; add) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (add &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; t.length &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; add &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;被删除元素的位置有误&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; t.length; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        t.head[i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t.head[i];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t.length&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 查找函数，其中，elem 表示要查找的数据元素的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectTable&lt;/span&gt;(table t, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; elem) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; t.length; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (t.head[i] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; elem) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 更改函数，其中，elem 为要更改的元素，newElem 为新的数据元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;table &lt;span style=&#34;color:#a6e22e&#34;&gt;amendTable&lt;/span&gt;(table t, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; elem, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; newElem) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; add &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectTable&lt;/span&gt;(t, elem);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t.head[add &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newElem;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 输出顺序表中元素的函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;displayTable&lt;/span&gt;(table t) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; t.length; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, t.head[i]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i, add;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    table t1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initTable&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 向顺序表中添加元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; Size; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        t1.head[i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        t1.length&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;原顺序表：&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;displayTable&lt;/span&gt;(t1);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;删除元素1:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;delTable&lt;/span&gt;(t1, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;displayTable&lt;/span&gt;(t1);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;在第2的位置插入元素5:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addTable&lt;/span&gt;(t1, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;displayTable&lt;/span&gt;(t1);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;查找元素3的位置:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    add &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectTable&lt;/span&gt;(t1, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, add);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;将元素3改为6:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;amendTable&lt;/span&gt;(t1, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;displayTable&lt;/span&gt;(t1);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;结果&#34;&gt;结果
&lt;/h2&gt;&lt;p&gt;程序运行结果为：&lt;/p&gt;</description>
        </item>
        <item>
        <title>数据结构 链表代码</title>
        <link>https://blog.yexca.net/archives/15/</link>
        <pubDate>Wed, 17 Nov 2021 12:00:49 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/15/</guid>
        <description>&lt;h2 id=&#34;简单链表&#34;&gt;简单链表
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; student
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; num;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; student &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;next;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; student a, b, c, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;head, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;p;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a.num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99101&lt;/span&gt;; a.score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;89.5&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    b.num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99103&lt;/span&gt;; b.score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    c.num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99107&lt;/span&gt;; c.score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;85&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;// 对结点的 num 和 score 成员赋值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    head &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;a;  &lt;span style=&#34;color:#75715e&#34;&gt;// 将结点 a 的起始地址赋给头指针 head
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    a.next &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;b;  &lt;span style=&#34;color:#75715e&#34;&gt;// 将结点 b 的起始地址赋给 a 结点的 next 成员
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    b.next &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;c;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    c.next &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NULL;  &lt;span style=&#34;color:#75715e&#34;&gt;// c 结点的 next 成员不存放其他结点地址
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; head;  &lt;span style=&#34;color:#75715e&#34;&gt;// 使 p 指针指向 a 结点
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%ld %5.1f&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, p&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;num, p&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;score);  &lt;span style=&#34;color:#75715e&#34;&gt;// 输出 p 指向的结点的数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;next;  &lt;span style=&#34;color:#75715e&#34;&gt;//使 p 指向下一结点
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(p &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; NULL);  &lt;span style=&#34;color:#75715e&#34;&gt;//输出完 c 结点后 p 的值为 NULL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;内存分配函数&#34;&gt;内存分配函数
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;malloc 函数&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;malloc&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; size);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;作用是在内存的动态存储区中分配一个长度为 size 的连接空间。些函数的值（即返回值）是一个指向分配空间起始地址的指针（基类型为 void）。如果些函数未能成功地执行（例如内存空间不足）则返回空指针 NULL。&lt;/p&gt;</description>
        </item>
        <item>
        <title>C 数据结构代码</title>
        <link>https://blog.yexca.net/archives/14/</link>
        <pubDate>Thu, 11 Nov 2021 23:03:27 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/14/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//数组栈的实现
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define MaxSize 50
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; Stack_Array{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; data[MaxSize];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; top;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}Sqstack,&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pSqstack;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Initstack&lt;/span&gt;();  &lt;span style=&#34;color:#75715e&#34;&gt;//初始化
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Isempty&lt;/span&gt;();     &lt;span style=&#34;color:#75715e&#34;&gt;//判断栈空
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Push&lt;/span&gt;();        &lt;span style=&#34;color:#75715e&#34;&gt;//入栈
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Pop&lt;/span&gt;();         &lt;span style=&#34;color:#75715e&#34;&gt;//出栈
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Gettop&lt;/span&gt;();      &lt;span style=&#34;color:#75715e&#34;&gt;//get 栈顶元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;)     &lt;span style=&#34;color:#75715e&#34;&gt;//测试
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; val;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Sqstack s1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pSqstack ps1&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;amp;&lt;/span&gt;s1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Initstack&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;s1);  &lt;span style=&#34;color:#75715e&#34;&gt;//初始化
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Isempty&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;s1))  &lt;span style=&#34;color:#75715e&#34;&gt;//判断栈空
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;栈为空！&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;栈不为空！&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;输入压栈元素的值&amp;#34;&lt;/span&gt;);    &lt;span style=&#34;color:#75715e&#34;&gt;//压栈 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;val);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Push&lt;/span&gt; (ps1,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;val);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;输入压栈元素的值&amp;#34;&lt;/span&gt;);    &lt;span style=&#34;color:#75715e&#34;&gt;//压栈 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;val);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Push&lt;/span&gt; (ps1,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;val);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Isempty&lt;/span&gt;(ps1))        &lt;span style=&#34;color:#75715e&#34;&gt;//判断栈空
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;栈为空！&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;栈不为空！&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Gettop&lt;/span&gt;(ps1,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;val))    &lt;span style=&#34;color:#75715e&#34;&gt;//GET栈顶元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;栈顶值为%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,val);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;栈顶元素查找失败！&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Pop&lt;/span&gt;(ps1,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;val))    &lt;span style=&#34;color:#75715e&#34;&gt;//出栈
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;出栈成功，出栈元素为%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,val);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;出栈失败！&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//初始化
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Initstack&lt;/span&gt; (pSqstack ps1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;top&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//判断栈空
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Isempty&lt;/span&gt;(pSqstack ps1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;top&lt;span style=&#34;color:#f92672&#34;&gt;==-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//若栈不满，则进行压栈
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Push&lt;/span&gt;(pSqstack ps1,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;val)&lt;span style=&#34;color:#75715e&#34;&gt;//*val:接受一个地址(int *(&amp;amp;val))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;top&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;MaxSize)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;top&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;data[ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;top]&lt;span style=&#34;color:#f92672&#34;&gt;=*&lt;/span&gt;val;&lt;span style=&#34;color:#75715e&#34;&gt;//这里传递的是值，这里的*val是*(&amp;amp;val),&amp;amp;val是由主调函数输入
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;//也可写作ps1-&amp;gt;data[++ps1-&amp;gt;top]=*val; 一定是++ps1-&amp;gt;top
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//若栈不空，则进行出栈，用val返回栈顶元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;Pop&lt;/span&gt;(pSqstack ps1,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;val)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Isempty&lt;/span&gt;(ps1))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;val&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;data[ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;top&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//get栈顶元素，用val返回栈顶元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Gettop&lt;/span&gt;(pSqstack ps1,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;val)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Isempty&lt;/span&gt;(ps1))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;val&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;data[ps1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;top];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;图解简化&lt;/p&gt;</description>
        </item>
        <item>
        <title>扬州杏雨后</title>
        <link>https://blog.yexca.net/archives/13/</link>
        <pubDate>Thu, 11 Nov 2021 18:01:33 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/13/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 ctxbb 编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2021/11-%e6%89%ac%e5%b7%9e%e6%9d%8f%e9%9b%a8%e5%90%8e/1.3cr7a6v19fc0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2021/11-%e6%89%ac%e5%b7%9e%e6%9d%8f%e9%9b%a8%e5%90%8e/2.6a9nc2b31gg0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;2&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2021/11-%e6%89%ac%e5%b7%9e%e6%9d%8f%e9%9b%a8%e5%90%8e/3.5saqmmz6s380.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;3&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2021/11-%e6%89%ac%e5%b7%9e%e6%9d%8f%e9%9b%a8%e5%90%8e/4.4o9isl9872c0.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;4&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/yexca/picx-images-hosting@master/2021/11-%e6%89%ac%e5%b7%9e%e6%9d%8f%e9%9b%a8%e5%90%8e/5.5do2087lo300.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;5&#34;
	
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>原神树脂查看与推送</title>
        <link>https://blog.yexca.net/archives/12/</link>
        <pubDate>Wed, 10 Nov 2021 15:21:30 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/12/</guid>
        <description>&lt;p&gt;虽然米忽悠的米游社提供了原神树脂的查看，但是使用电脑时每次查看还要打开手机然后打开米游社着实有亿点不方便&lt;/p&gt;
&lt;p&gt;原作者文章：&lt;strong&gt;

&lt;a class=&#34;link&#34; href=&#34;https://ngabbs.com/read.php?tid=29226061&amp;amp;rand=307&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
自己做了一个树脂记录软件
&lt;/a&gt;
 &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;原文软件链接：

&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/1esw3JjgfMZwtzh1nRGOF7Q&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
提取码：1w5b
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>微博视频下载</title>
        <link>https://blog.yexca.net/archives/11/</link>
        <pubDate>Wed, 10 Nov 2021 11:29:51 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/11/</guid>
        <description>&lt;p&gt;首先我们找到要下载的视频 (废话)，复制图中框选部分的链接&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jsd.cdn.zzko.cn/gh/yexca/picx-images-hosting@master/2021/11-%e5%be%ae%e5%8d%9a/image.5c0pgzubl8.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;然后打开

&lt;a class=&#34;link&#34; href=&#34;https://weibo.iiilab.com/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
视频下载解析网站
&lt;/a&gt;
 ，输入复制的链接然后点击解析视频图片 (如需验证根据网站提示进行即可)&lt;/p&gt;</description>
        </item>
        <item>
        <title>WordPress 添加返回上一页按钮</title>
        <link>https://blog.yexca.net/archives/10/</link>
        <pubDate>Wed, 10 Nov 2021 11:06:27 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/10/</guid>
        <description>&lt;p&gt;多数情况下，我们浏览网页一般使用浏览器或系统自带的返回，但有些系统的交互逻辑及其不好用，这时在网页添加一个返回上一页按钮可以极大改善浏览体验&lt;/p&gt;
&lt;p&gt;首先，在 WordPress 的后台点击“外观-自定义”来到可视化编辑页面&lt;/p&gt;</description>
        </item>
        <item>
        <title>Win11 官方安卓子系统安装</title>
        <link>https://blog.yexca.net/archives/9/</link>
        <pubDate>Tue, 09 Nov 2021 23:45:42 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/9/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;准备条件：win11 专业版及以上，将系统地区调至美国&lt;/p&gt;
&lt;p&gt;在设置-&amp;gt;应用 -&amp;gt; 可选功能 -&amp;gt; 更多Windows功能中勾选虚拟机平台，然后重启系统即可&lt;/p&gt;</description>
        </item>
        <item>
        <title>SQL 语句的一些语法细节 (SQL SERVER 语句)</title>
        <link>https://blog.yexca.net/archives/8/</link>
        <pubDate>Mon, 08 Nov 2021 11:51:18 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/8/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1sql-order-by-关键字&#34;&gt;1.SQL ORDER BY 关键字
&lt;/h2&gt;&lt;p&gt;ORDER BY 关键字用于对结果集按照一个列或者多个列进行排序。&lt;/p&gt;
&lt;p&gt;ORDER BY 关键字默认按照升序对记录进行排序。如果需要按照降序对记录进行排序，您可以使用 DESC 关键字&lt;/p&gt;</description>
        </item>
        <item>
        <title>关于在使用 navicat 连接 SQL server 的一些问题</title>
        <link>https://blog.yexca.net/archives/7/</link>
        <pubDate>Sun, 07 Nov 2021 23:41:46 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/7/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在安装完 SQL server 和 navicat 后在 navicat 中添加数据库：&lt;/p&gt;
&lt;p&gt;1.连接名无要求，按照自己需要命名&lt;/p&gt;
&lt;p&gt;2.打开安装好的 SQL server 配置管理器&lt;/p&gt;
&lt;p&gt;注意 SQL Server（SQLEXPRESS）要保证在运行中，否则 navicat 无法连接&lt;br&gt;
双击打开后点击服务，可以看到自己的主机名&lt;/p&gt;</description>
        </item>
        <item>
        <title>VsCode 配置 C 语言环境</title>
        <link>https://blog.yexca.net/archives/6/</link>
        <pubDate>Sun, 07 Nov 2021 23:32:26 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/6/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;p&gt;其文章: 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/2022/12/15/997871bc263d/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
https://blog.hiyoung.xyz/2022/12/15/997871bc263d/
&lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;VSC只是一个纯文本&lt;strong&gt;编辑器&lt;/strong&gt;，不是 IDE (集成开发环境)，不含&lt;strong&gt;编译器&lt;/strong&gt;和许多其它功能，所以编译器要自己装好&lt;/p&gt;
&lt;p&gt;第一步：在 vscode 官网下载软件，链接：

&lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Visual Studio Code – Code Editing. Redefined
&lt;/a&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>VsCode 配置 Python 环境</title>
        <link>https://blog.yexca.net/archives/5/</link>
        <pubDate>Sun, 07 Nov 2021 11:28:58 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/5/</guid>
        <description>&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;安装完成 VS Code 和 Python 并配置环境变量后&lt;/p&gt;
&lt;p&gt;打开 VS Code，进入拓展搜索并下载 Python&lt;/p&gt;
&lt;p&gt;在资源管理器新建一个 Python 源文件 (.py) 后，资源管理器会在.vscode 文件夹下生成 setting.json 文件（若没有自动生成可自己创建）&lt;/p&gt;</description>
        </item>
        <item>
        <title>如何自动调用当前系统默认的邮件客户端</title>
        <link>https://blog.yexca.net/archives/4/</link>
        <pubDate>Sat, 06 Nov 2021 17:05:36 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/4/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;该文章由 

&lt;a class=&#34;link&#34; href=&#34;https://blog.hiyoung.xyz/&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
Hiyoung
&lt;/a&gt;
  编写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;mailto：可以自动调用当前系统默认的邮件客户端，并自动填充收件人、抄送人、密送人、主题、内容。&lt;/p&gt;
&lt;p&gt;参数说明:&lt;br&gt;
mailto： 收件人，多个以;分隔&lt;br&gt;
cc： 抄送人，多个以;分隔&lt;br&gt;
bcc： 密送人，多个以;分隔&lt;br&gt;
subject： 主题&lt;br&gt;
body： 内容&lt;/p&gt;</description>
        </item>
        <item>
        <title>WordPress 嵌入 BiLiBiLi 视频说明</title>
        <link>https://blog.yexca.net/archives/3/</link>
        <pubDate>Sat, 06 Nov 2021 16:43:20 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/3/</guid>
        <description>&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;首先到待嵌入的视频将鼠标移到分享按钮上（不用点击）&lt;/p&gt;
&lt;p&gt;然后移到嵌入代码并复制&lt;/p&gt;
&lt;p&gt;（本例代码如下）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;iframe&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//player.bilibili.com/player.html?aid=583631611&amp;amp;bvid=BV1Tz4y1X7Bg&amp;amp;cid=206708397&amp;amp;page=1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scrolling&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;border&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;frameborder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;framespacing&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;allowfullscreen&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&amp;gt; &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;iframe&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们需要这串代码中的“&lt;strong&gt;aid&lt;/strong&gt;”和“&lt;strong&gt;cid&lt;/strong&gt;”部分（即 aid=583631611 和 cid=206708397 ）&lt;/p&gt;</description>
        </item>
        <item>
        <title>WordPress 限制用户访问媒体库</title>
        <link>https://blog.yexca.net/archives/2/</link>
        <pubDate>Sat, 06 Nov 2021 14:31:04 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/2/</guid>
        <description>&lt;p&gt;默认情况下，WordPress 允许作者​​查看您网站媒体库中的所有图像。允许作者查看媒体库中的所有文件。 他们还可以查看由管理员 ， 编辑或其他作者上传的图像。&lt;/p&gt;</description>
        </item>
        <item>
        <title>Hello World！</title>
        <link>https://blog.yexca.net/archives/1/</link>
        <pubDate>Sat, 06 Nov 2021 14:15:19 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/1/</guid>
        <description>&lt;p&gt;欢迎使用 WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！&lt;/p&gt;</description>
        </item>
        <item>
        <title>关于</title>
        <link>https://blog.yexca.net/about/</link>
        <pubDate>Thu, 04 Nov 2021 20:20:20 +0800</pubDate>
        
        <guid>https://blog.yexca.net/about/</guid>
        <description>&lt;p&gt;欢迎!~，我是 

&lt;a class=&#34;link&#34; href=&#34;https://lit.link/yexca&#34; 


   target=&#34;_blank&#34; rel=&#34;noopener&#34;
&gt;
yexca (叶卡)
&lt;/a&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;这是哪&#34;&gt;这是哪？
&lt;/h2&gt;&lt;p&gt;欢迎来到我的个人博客！这里是我记录学习与探索的小天地，最近偶尔也分享一些生活中的小感悟&lt;/p&gt;
&lt;h2 id=&#34;这里有啥&#34;&gt;这里有啥？
&lt;/h2&gt;&lt;p&gt;这个博客是我的 &lt;strong&gt;个人知识库&lt;/strong&gt;，记录了我在学习过程中遇到的难题和解决方法，也会不定时分享一些探索的内容&lt;/p&gt;</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://blog.yexca.net/archives/</link>
        <pubDate>Thu, 04 Nov 2021 20:20:20 +0800</pubDate>
        
        <guid>https://blog.yexca.net/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://blog.yexca.net/search/</link>
        <pubDate>Thu, 04 Nov 2021 20:20:20 +0800</pubDate>
        
        <guid>https://blog.yexca.net/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
