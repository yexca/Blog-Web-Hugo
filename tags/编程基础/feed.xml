<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编程基础 on yexca'Blog</title><link>https://blog.yexca.net/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</link><description>Recent content in 编程基础 on yexca'Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>yexca</copyright><lastBuildDate>Tue, 28 Jan 2025 21:11:18 +0900</lastBuildDate><atom:link href="https://blog.yexca.net/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/feed.xml" rel="self" type="application/rss+xml"/><item><title>Python pyinstaller 打包</title><link>https://blog.yexca.net/archives/213/</link><pubDate>Tue, 07 Jan 2025 17:26:09 +0900</pubDate><guid>https://blog.yexca.net/archives/213/</guid><description>&lt;p>Python 打包是根据当前系统环境的，Windows 下是打包出 exe 可执行程序，Linux 下打包出 ELF 格式的二进制文件，不支持跨平台打包&lt;/p>
&lt;h2 id="安装">安装
&lt;/h2>&lt;p>通过 pip 安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bat" data-lang="bat">&lt;span class="line">&lt;span class="cl">pip install pyinstaller
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="打包为单文件">打包为单文件
&lt;/h2>&lt;p>使用参数 &lt;code>--onefile&lt;/code>&lt;/p></description></item><item><title>GoLang 通道</title><link>https://blog.yexca.net/archives/207/</link><pubDate>Sat, 21 Dec 2024 14:52:55 +0800</pubDate><guid>https://blog.yexca.net/archives/207/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang Series&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道: 本文&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>Go 程 (goroutine) 可以通过 channel 进行传递数据，引用类型 channel 可用于多个 goroutine 通讯，其内部实现了同步，确保并发安全&lt;/p></description></item><item><title>GoLang go 程</title><link>https://blog.yexca.net/archives/206/</link><pubDate>Tue, 17 Dec 2024 21:16:31 +0800</pubDate><guid>https://blog.yexca.net/archives/206/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang Series&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程: 本文&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>进程 -&amp;gt; 线程 -&amp;gt; 协程&lt;/p></description></item><item><title>GoLang 结构体标签</title><link>https://blog.yexca.net/archives/205/</link><pubDate>Wed, 11 Dec 2024 18:31:18 +0800</pubDate><guid>https://blog.yexca.net/archives/205/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang Series&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签: 本文&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>通过结构体标签可以描述该类在某包的作用&lt;/p></description></item><item><title>GoLang 反射</title><link>https://blog.yexca.net/archives/204/</link><pubDate>Tue, 03 Dec 2024 14:07:18 +0800</pubDate><guid>https://blog.yexca.net/archives/204/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang Series&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射: 本文&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>反射指一类应用，它们能够自描述和自控制&lt;/p></description></item><item><title>GoLang 面向对象</title><link>https://blog.yexca.net/archives/162/</link><pubDate>Fri, 01 Mar 2024 15:35:38 +0800</pubDate><guid>https://blog.yexca.net/archives/162/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang Series&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象: 本文&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>通过使用结构体构建类与对象的概念&lt;/p></description></item><item><title>GoLang 切片</title><link>https://blog.yexca.net/archives/160/</link><pubDate>Tue, 27 Feb 2024 20:00:00 +0800</pubDate><guid>https://blog.yexca.net/archives/160/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang 系列&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片: 本文&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p></description></item><item><title>GoLang 函数</title><link>https://blog.yexca.net/archives/156/</link><pubDate>Thu, 22 Feb 2024 04:47:28 +0800</pubDate><guid>https://blog.yexca.net/archives/156/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang 系列&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数: 本文&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p></description></item><item><title>GoLang 变量与常量</title><link>https://blog.yexca.net/archives/155/</link><pubDate>Tue, 20 Feb 2024 06:41:18 +0800</pubDate><guid>https://blog.yexca.net/archives/155/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang 系列&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/archives/154"
>
https://blog.yexca.net/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 变量与常量: 本文&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p></description></item><item><title>Hello GoLang</title><link>https://blog.yexca.net/archives/154/</link><pubDate>Mon, 19 Feb 2024 07:58:37 +0800</pubDate><guid>https://blog.yexca.net/archives/154/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Golang 系列&lt;/strong>&lt;/p>
&lt;p>Hello GoLang: 本文&lt;br>
GoLang (var and const) 变量与常量:
&lt;a class="link" href="https://blog.yexca.net/archives/155"
>
https://blog.yexca.net/archives/155
&lt;/a>
&lt;br>
GoLang (func) 函数:
&lt;a class="link" href="https://blog.yexca.net/archives/156"
>
https://blog.yexca.net/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) 切片:
&lt;a class="link" href="https://blog.yexca.net/archives/160"
>
https://blog.yexca.net/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) 面向对象:
&lt;a class="link" href="https://blog.yexca.net/archives/162"
>
https://blog.yexca.net/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) 反射:
&lt;a class="link" href="https://blog.yexca.net/archives/204"
>
https://blog.yexca.net/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 结构体标签:
&lt;a class="link" href="https://blog.yexca.net/archives/205"
>
https://blog.yexca.net/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) go 程:
&lt;a class="link" href="https://blog.yexca.net/archives/206"
>
https://blog.yexca.net/archives/206
&lt;/a>
&lt;br>
GoLang (channel) 通道:
&lt;a class="link" href="https://blog.yexca.net/archives/207"
>
https://blog.yexca.net/archives/207
&lt;/a>
&lt;/p></description></item></channel></rss>